{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pandi\\\\Code-Battle\\\\frontend\\\\src\\\\pages\\\\Room.js\",\n  _s = $RefreshSig$();\n// src/pages/Room.js\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport socket from \"../socket\";\nimport CodeEditor from \"../components/CodeEditor\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Room() {\n  _s();\n  var _location$state;\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const username = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || `guest-${Math.floor(Math.random() * 1000)}`;\n  const [players, setPlayers] = useState([]);\n  const [playerEditors, setPlayerEditors] = useState({}); // { socketId: code }\n  const [scores, setScores] = useState({});\n  const [matchStarted, setMatchStarted] = useState(false);\n\n  // Optional: single language selector for now\n  const [language] = useState(\"javascript\");\n  useEffect(() => {\n    socket.emit(\"join-room\", {\n      roomId,\n      username\n    }, resp => {\n      if (!resp || !resp.ok) {\n        alert(\"Failed to join room: \" + ((resp === null || resp === void 0 ? void 0 : resp.error) || \"unknown\"));\n        navigate(\"/\");\n      }\n    });\n    socket.on(\"player-list\", list => {\n      setPlayers(list);\n\n      // Ensure editor buffers exist\n      setPlayerEditors(prev => {\n        const updated = {\n          ...prev\n        };\n        list.forEach(p => {\n          if (!updated[p.socketId]) updated[p.socketId] = \"// waiting for code...\";\n        });\n        return updated;\n      });\n\n      // Ensure scores are present for all players\n      setScores(prev => {\n        const updated = {\n          ...prev\n        };\n        list.forEach(p => {\n          if (updated[p.socketId] == null) updated[p.socketId] = 0;\n        });\n        return updated;\n      });\n    });\n    socket.on(\"all-codes\", codes => setPlayerEditors(codes));\n    socket.on(\"score-update\", updatedScores => setScores(updatedScores));\n    socket.on(\"match-started\", ({\n      scores: initialScores\n    }) => {\n      setMatchStarted(true);\n      if (initialScores) setScores(initialScores);\n    });\n    socket.on(\"match-stopped\", ({\n      scores\n    }) => {\n      setMatchStarted(false);\n      if (scores) setScores(scores);\n    });\n    return () => {\n      socket.emit(\"leave-room\", {\n        roomId\n      });\n      socket.off(\"player-list\");\n      socket.off(\"all-codes\");\n      socket.off(\"score-update\");\n      socket.off(\"match-started\");\n      socket.off(\"match-stopped\");\n    };\n  }, [roomId, username, navigate]);\n  const handleCodeChange = (playerId, value) => {\n    setPlayerEditors(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n    socket.emit(\"code-change\", {\n      roomId,\n      code: value\n    });\n  };\n  const startMatch = () => socket.emit(\"start-match\", {\n    roomId\n  });\n  const stopMatch = () => socket.emit(\"stop-match\", {\n    roomId\n  });\n  const runOwnCode = async () => {\n    const code = playerEditors[socket.id] || \"\";\n    try {\n      const resp = await fetch(\"http://localhost:5000/api/run\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          language,\n          // keep simple; enhance later with per-editor choice\n          code,\n          stdin: \"\",\n          roomId,\n          socketId: socket.id // critical for awarding points\n        })\n      });\n      const data = await resp.json();\n      if (!resp.ok) {\n        alert((data === null || data === void 0 ? void 0 : data.error) || \"Run failed\");\n      } else {\n        // Scoring happens server-side if match is active and exitCode===0\n        // You can show output here if you want:\n        console.log(\"Run result:\", data);\n        if (data.exitCode === 0) {\n          // optional local toast\n          console.log(\"Success âœ“ (point should be awarded)\");\n        } else {\n          console.log(\"Program error or failed test.\");\n        }\n      }\n    } catch (e) {\n      alert(e.message || \"Network error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      height: \"100vh\",\n      boxSizing: \"border-box\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Logged in as: \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 12\n      },\n      children: !matchStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startMatch,\n        children: \"Start Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopMatch,\n        children: \"Stop Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: players.map(p => {\n          var _scores$p$socketId;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [p.username, p.socketId === socket.id ? \" (You)\" : \"\", \": \", (_scores$p$socketId = scores[p.socketId]) !== null && _scores$p$socketId !== void 0 ? _scores$p$socketId : 0]\n          }, p.socketId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Runs award points only while a match is active and if the program exits with code 0.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n        gridTemplateRows: \"1fr 1fr\",\n        gap: \"10px\",\n        height: \"85vh\"\n      },\n      children: Array.from({\n        length: 4\n      }).map((_, idx) => {\n        var _scores$player$socket;\n        const player = players[idx];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            minHeight: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"#eee\",\n              padding: \"5px\",\n              flexShrink: 0\n            },\n            children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [player.username, player.socketId === socket.id && \" (You)\", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  float: \"right\"\n                },\n                children: [(_scores$player$socket = scores[player === null || player === void 0 ? void 0 : player.socketId]) !== null && _scores$player$socket !== void 0 ? _scores$player$socket : 0, \" pts\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : `Waiting for player ${idx + 1}...`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              minHeight: 0,\n              overflow: \"hidden\"\n            },\n            children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n                code: playerEditors[player.socketId] || \"\",\n                onChange: value => handleCodeChange(player.socketId, value),\n                readOnly: player.socketId !== socket.id,\n                style: {\n                  width: \"100%\",\n                  height: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), player.socketId === socket.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: \"6px\",\n                  borderTop: \"1px solid #eee\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: runOwnCode,\n                  disabled: !matchStarted,\n                  children: [\"Run Code \", matchStarted ? \"\" : \"(match not started)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                background: \"#f9f9f9\"\n              },\n              children: \"Waiting for player...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, (player === null || player === void 0 ? void 0 : player.socketId) || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"VlfvrmLgIYPV/CafIRpm1b6ENVA=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","useParams","socket","CodeEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","Room","_s","_location$state","roomId","location","navigate","username","state","Math","floor","random","players","setPlayers","playerEditors","setPlayerEditors","scores","setScores","matchStarted","setMatchStarted","language","emit","resp","ok","alert","error","on","list","prev","updated","forEach","p","socketId","codes","updatedScores","initialScores","off","handleCodeChange","playerId","value","code","startMatch","stopMatch","runOwnCode","id","fetch","method","headers","body","JSON","stringify","stdin","data","json","console","log","exitCode","e","message","style","padding","height","boxSizing","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","map","_scores$p$socketId","display","gridTemplateColumns","gridTemplateRows","gap","Array","from","length","_","idx","_scores$player$socket","player","border","flexDirection","minHeight","background","flexShrink","float","flex","overflow","onChange","readOnly","width","borderTop","disabled","alignItems","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/pandi/Code-Battle/frontend/src/pages/Room.js"],"sourcesContent":["// src/pages/Room.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport socket from \"../socket\";\r\nimport CodeEditor from \"../components/CodeEditor\";\r\n\r\nfunction Room() {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const username =\r\n    location.state?.username || `guest-${Math.floor(Math.random() * 1000)}`;\r\n\r\n  const [players, setPlayers] = useState([]);\r\n  const [playerEditors, setPlayerEditors] = useState({}); // { socketId: code }\r\n  const [scores, setScores] = useState({});\r\n  const [matchStarted, setMatchStarted] = useState(false);\r\n\r\n  // Optional: single language selector for now\r\n  const [language] = useState(\"javascript\");\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"join-room\", { roomId, username }, (resp) => {\r\n      if (!resp || !resp.ok) {\r\n        alert(\"Failed to join room: \" + (resp?.error || \"unknown\"));\r\n        navigate(\"/\");\r\n      }\r\n    });\r\n\r\n    socket.on(\"player-list\", (list) => {\r\n      setPlayers(list);\r\n\r\n      // Ensure editor buffers exist\r\n      setPlayerEditors((prev) => {\r\n        const updated = { ...prev };\r\n        list.forEach((p) => {\r\n          if (!updated[p.socketId]) updated[p.socketId] = \"// waiting for code...\";\r\n        });\r\n        return updated;\r\n      });\r\n\r\n      // Ensure scores are present for all players\r\n      setScores((prev) => {\r\n        const updated = { ...prev };\r\n        list.forEach((p) => {\r\n          if (updated[p.socketId] == null) updated[p.socketId] = 0;\r\n        });\r\n        return updated;\r\n      });\r\n    });\r\n\r\n    socket.on(\"all-codes\", (codes) => setPlayerEditors(codes));\r\n    socket.on(\"score-update\", (updatedScores) => setScores(updatedScores));\r\n\r\n    socket.on(\"match-started\", ({ scores: initialScores }) => {\r\n      setMatchStarted(true);\r\n      if (initialScores) setScores(initialScores);\r\n    });\r\n    socket.on(\"match-stopped\", ({ scores }) => {\r\n      setMatchStarted(false);\r\n      if (scores) setScores(scores);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"leave-room\", { roomId });\r\n      socket.off(\"player-list\");\r\n      socket.off(\"all-codes\");\r\n      socket.off(\"score-update\");\r\n      socket.off(\"match-started\");\r\n      socket.off(\"match-stopped\");\r\n    };\r\n  }, [roomId, username, navigate]);\r\n\r\n  const handleCodeChange = (playerId, value) => {\r\n    setPlayerEditors((prev) => ({ ...prev, [playerId]: value }));\r\n    socket.emit(\"code-change\", { roomId, code: value });\r\n  };\r\n\r\n  const startMatch = () => socket.emit(\"start-match\", { roomId });\r\n  const stopMatch = () => socket.emit(\"stop-match\", { roomId });\r\n\r\n  const runOwnCode = async () => {\r\n    const code = playerEditors[socket.id] || \"\";\r\n    try {\r\n      const resp = await fetch(\"http://localhost:5000/api/run\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          language, // keep simple; enhance later with per-editor choice\r\n          code,\r\n          stdin: \"\",\r\n          roomId,\r\n          socketId: socket.id, // critical for awarding points\r\n        }),\r\n      });\r\n      const data = await resp.json();\r\n      if (!resp.ok) {\r\n        alert(data?.error || \"Run failed\");\r\n      } else {\r\n        // Scoring happens server-side if match is active and exitCode===0\r\n        // You can show output here if you want:\r\n        console.log(\"Run result:\", data);\r\n        if (data.exitCode === 0) {\r\n          // optional local toast\r\n          console.log(\"Success âœ“ (point should be awarded)\");\r\n        } else {\r\n          console.log(\"Program error or failed test.\");\r\n        }\r\n      }\r\n    } catch (e) {\r\n      alert(e.message || \"Network error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", height: \"100vh\", boxSizing: \"border-box\" }}>\r\n      <h2>Room: {roomId}</h2>\r\n      <p>Logged in as: {username}</p>\r\n\r\n      {/* Match controls */}\r\n      <div style={{ marginBottom: 12 }}>\r\n        {!matchStarted ? (\r\n          <button onClick={startMatch}>Start Match</button>\r\n        ) : (\r\n          <button onClick={stopMatch}>Stop Match</button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Scoreboard */}\r\n      <div style={{ marginBottom: 16 }}>\r\n        <h3>Scores</h3>\r\n        <ul>\r\n          {players.map((p) => (\r\n            <li key={p.socketId}>\r\n              {p.username}\r\n              {p.socketId === socket.id ? \" (You)\" : \"\"}: {scores[p.socketId] ?? 0}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <small>\r\n          Runs award points only while a match is active and if the program exits with code 0.\r\n        </small>\r\n      </div>\r\n\r\n      {/* 2x2 editors grid */}\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"1fr 1fr\",\r\n          gridTemplateRows: \"1fr 1fr\",\r\n          gap: \"10px\",\r\n          height: \"85vh\",\r\n        }}\r\n      >\r\n        {Array.from({ length: 4 }).map((_, idx) => {\r\n          const player = players[idx];\r\n\r\n          return (\r\n            <div\r\n              key={player?.socketId || idx}\r\n              style={{\r\n                border: \"1px solid #ccc\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                minHeight: 0,\r\n              }}\r\n            >\r\n              <div style={{ background: \"#eee\", padding: \"5px\", flexShrink: 0 }}>\r\n                {player ? (\r\n                  <>\r\n                    {player.username}\r\n                    {player.socketId === socket.id && \" (You)\"}\r\n                    <span style={{ float: \"right\" }}>\r\n                      {scores[player?.socketId] ?? 0} pts\r\n                    </span>\r\n                  </>\r\n                ) : (\r\n                  `Waiting for player ${idx + 1}...`\r\n                )}\r\n              </div>\r\n\r\n              <div style={{ flex: 1, minHeight: 0, overflow: \"hidden\" }}>\r\n                {player ? (\r\n                  <>\r\n                    <CodeEditor\r\n                      code={playerEditors[player.socketId] || \"\"}\r\n                      onChange={(value) => handleCodeChange(player.socketId, value)}\r\n                      readOnly={player.socketId !== socket.id}\r\n                      style={{ width: \"100%\", height: \"100%\" }}\r\n                    />\r\n                    {/* Own Run button under your editor only */}\r\n                    {player.socketId === socket.id && (\r\n                      <div style={{ padding: \"6px\", borderTop: \"1px solid #eee\" }}>\r\n                        <button onClick={runOwnCode} disabled={!matchStarted}>\r\n                          Run Code {matchStarted ? \"\" : \"(match not started)\"}\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      background: \"#f9f9f9\",\r\n                    }}\r\n                  >\r\n                    Waiting for player...\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}