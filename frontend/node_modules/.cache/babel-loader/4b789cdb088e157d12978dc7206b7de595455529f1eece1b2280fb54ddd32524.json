{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pandi\\\\Code-Battle\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport socket from \"./socket\";\nimport CodeEditor from \"./components/CodeEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState(\"// Start typing...\");\n  useEffect(() => {\n    // Log connection once\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to server:\", socket.id);\n    });\n\n    // Listen for code changes\n    socket.on(\"code-update\", newCode => {\n      setCode(newCode);\n    });\n\n    // Cleanup only event listeners (not full disconnect)\n    return () => {\n      socket.off(\"connect\");\n      socket.off(\"code-update\");\n    };\n  }, []);\n  const handleCodeChange = value => {\n    setCode(value);\n    socket.emit(\"code-update\", value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CodeBattle Arena \\uD83C\\uDFC6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      code: code,\n      onChange: handleCodeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FgzaempD5aG3pnjiQrplqm96lwg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","socket","CodeEditor","jsxDEV","_jsxDEV","App","_s","code","setCode","on","console","log","id","newCode","off","handleCodeChange","value","emit","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["C:/Users/pandi/Code-Battle/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport socket from \"./socket\";\nimport CodeEditor from \"./components/CodeEditor\";\n\nfunction App() {\n  const [code, setCode] = useState(\"// Start typing...\");\n\n  useEffect(() => {\n    // Log connection once\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to server:\", socket.id);\n    });\n\n    // Listen for code changes\n    socket.on(\"code-update\", (newCode) => {\n      setCode(newCode);\n    });\n\n    // Cleanup only event listeners (not full disconnect)\n    return () => {\n      socket.off(\"connect\");\n      socket.off(\"code-update\");\n    };\n  }, []);\n\n  const handleCodeChange = (value) => {\n    setCode(value);\n    socket.emit(\"code-update\", value);\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>CodeBattle Arena üèÜ</h1>\n      <CodeEditor code={code} onChange={handleCodeChange} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,oBAAoB,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd;IACAC,MAAM,CAACQ,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEV,MAAM,CAACW,EAAE,CAAC;IAChD,CAAC,CAAC;;IAEF;IACAX,MAAM,CAACQ,EAAE,CAAC,aAAa,EAAGI,OAAO,IAAK;MACpCL,OAAO,CAACK,OAAO,CAAC;IAClB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXZ,MAAM,CAACa,GAAG,CAAC,SAAS,CAAC;MACrBb,MAAM,CAACa,GAAG,CAAC,aAAa,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClCR,OAAO,CAACQ,KAAK,CAAC;IACdf,MAAM,CAACgB,IAAI,CAAC,aAAa,EAAED,KAAK,CAAC;EACnC,CAAC;EAED,oBACEZ,OAAA;IAAKc,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClChB,OAAA;MAAAgB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BpB,OAAA,CAACF,UAAU;MAACK,IAAI,EAAEA,IAAK;MAACkB,QAAQ,EAAEV;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAAClB,EAAA,CAhCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}