{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pandi\\\\Code-Battle\\\\frontend\\\\src\\\\pages\\\\Room.js\",\n  _s = $RefreshSig$();\n// src/pages/Room.js\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport socket from \"../socket\";\nimport CodeEditor from \"../components/CodeEditor\";\nimport RunPanel from \"../components/RunPanel\";\nimport OutputPanel from \"../components/OutputPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Room() {\n  _s();\n  var _location$state;\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const username = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || `guest-${Math.floor(Math.random() * 1000)}`;\n  const [code, setCode] = useState(\"// waiting for others...\");\n  const [players, setPlayers] = useState([]);\n  const [stdout, setStdout] = useState(\"\");\n  const [stderr, setStderr] = useState(\"\");\n  const [language, setLanguage] = useState(\"javascript\");\n  const [stdin, setStdin] = useState(\"\");\n  const [running, setRunning] = useState(false);\n\n  // keep a ref to avoid emitting on initial code population if desired\n  const initialSyncDone = useRef(false);\n  useEffect(() => {\n    // Join the room via socket\n    socket.emit(\"join-room\", {\n      roomId,\n      username\n    }, resp => {\n      if (!resp || !resp.ok) {\n        alert(\"Failed to join room: \" + ((resp === null || resp === void 0 ? void 0 : resp.error) || \"unknown\"));\n        navigate(\"/\");\n      } else {\n        console.log(\"Joined room:\", resp.room);\n      }\n    });\n\n    // Listeners\n    socket.on(\"room-players\", list => {\n      setPlayers(list);\n    });\n\n    // code updates scoped to room\n    socket.on(\"code-update\", newCode => {\n      // avoid clobbering while typing locally? (you can add OT later)\n      setCode(newCode);\n      initialSyncDone.current = true;\n    });\n    socket.on(\"match-started\", data => {\n      // handle match start\n      alert(\"Match started!\");\n    });\n\n    // cleanup on leave/unmount\n    return () => {\n      socket.emit(\"leave-room\", {\n        roomId\n      }, () => {});\n      socket.off(\"room-players\");\n      socket.off(\"code-update\");\n      socket.off(\"match-started\");\n    };\n  }, [roomId, username, navigate]);\n\n  // When the editor changes, emit room-code-update only if joined\n  const handleCodeChange = value => {\n    setCode(value);\n    // throttle/debounce in production\n    socket.emit(\"room-code-update\", {\n      roomId,\n      code: value\n    });\n  };\n  const startMatch = () => {\n    socket.emit(\"start-match\", {\n      roomId\n    });\n  };\n\n  // Run code via backend /api/run (same as Stage 3)\n  const runCode = async () => {\n    setRunning(true);\n    setStdout(\"\");\n    setStderr(\"\");\n    try {\n      const res = await fetch(\"http://localhost:5000/api/run\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          language,\n          code,\n          stdin\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setStderr((data === null || data === void 0 ? void 0 : data.error) || \"run failed\");\n      } else {\n        setStdout(data.stdout || \"\");\n        setStderr(data.stderr || \"\");\n      }\n    } catch (err) {\n      setStderr(err.message || \"network error\");\n    } finally {\n      setRunning(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 1000,\n      margin: \"18px auto\",\n      padding: \"0 12px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: 12\n          },\n          onClick: () => navigate(\"/\"),\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 260px\",\n        gap: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n          code: code,\n          onChange: handleCodeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RunPanel, {\n          language: language,\n          setLanguage: setLanguage,\n          stdin: stdin,\n          setStdin: setStdin,\n          onRun: runCode,\n          running: running\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OutputPanel, {\n          stdout: stdout,\n          stderr: stderr,\n          exitCode: null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        style: {\n          borderLeft: \"1px solid #eee\",\n          paddingLeft: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: players.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [p.username, p.socketId === socket.id ? \" (you)\" : \"\"]\n          }, p.socketId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 18\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startMatch,\n            children: \"Start Match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"MjdU21xGIhvFNnPxB39uZn8z7QY=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","useNavigate","useParams","socket","CodeEditor","RunPanel","OutputPanel","jsxDEV","_jsxDEV","Room","_s","_location$state","roomId","location","navigate","username","state","Math","floor","random","code","setCode","players","setPlayers","stdout","setStdout","stderr","setStderr","language","setLanguage","stdin","setStdin","running","setRunning","initialSyncDone","emit","resp","ok","alert","error","console","log","room","on","list","newCode","current","data","off","handleCodeChange","value","startMatch","runCode","res","fetch","method","headers","body","JSON","stringify","json","err","message","style","maxWidth","margin","padding","children","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","onClick","gridTemplateColumns","gap","onChange","onRun","exitCode","borderLeft","paddingLeft","map","p","socketId","id","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/pandi/Code-Battle/frontend/src/pages/Room.js"],"sourcesContent":["// src/pages/Room.js\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport socket from \"../socket\";\r\nimport CodeEditor from \"../components/CodeEditor\";\r\nimport RunPanel from \"../components/RunPanel\";\r\nimport OutputPanel from \"../components/OutputPanel\";\r\n\r\nfunction Room() {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const username = location.state?.username || `guest-${Math.floor(Math.random()*1000)}`;\r\n\r\n  const [code, setCode] = useState(\"// waiting for others...\");\r\n  const [players, setPlayers] = useState([]);\r\n  const [stdout, setStdout] = useState(\"\");\r\n  const [stderr, setStderr] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n  const [stdin, setStdin] = useState(\"\");\r\n  const [running, setRunning] = useState(false);\r\n\r\n  // keep a ref to avoid emitting on initial code population if desired\r\n  const initialSyncDone = useRef(false);\r\n\r\n  useEffect(() => {\r\n    // Join the room via socket\r\n    socket.emit(\"join-room\", { roomId, username }, (resp) => {\r\n      if (!resp || !resp.ok) {\r\n        alert(\"Failed to join room: \" + (resp?.error || \"unknown\"));\r\n        navigate(\"/\");\r\n      } else {\r\n        console.log(\"Joined room:\", resp.room);\r\n      }\r\n    });\r\n\r\n    // Listeners\r\n    socket.on(\"room-players\", (list) => {\r\n      setPlayers(list);\r\n    });\r\n\r\n    // code updates scoped to room\r\n    socket.on(\"code-update\", (newCode) => {\r\n      // avoid clobbering while typing locally? (you can add OT later)\r\n      setCode(newCode);\r\n      initialSyncDone.current = true;\r\n    });\r\n\r\n    socket.on(\"match-started\", (data) => {\r\n      // handle match start\r\n      alert(\"Match started!\");\r\n    });\r\n\r\n    // cleanup on leave/unmount\r\n    return () => {\r\n      socket.emit(\"leave-room\", { roomId }, () => {});\r\n      socket.off(\"room-players\");\r\n      socket.off(\"code-update\");\r\n      socket.off(\"match-started\");\r\n    };\r\n  }, [roomId, username, navigate]);\r\n\r\n  // When the editor changes, emit room-code-update only if joined\r\n  const handleCodeChange = (value) => {\r\n    setCode(value);\r\n    // throttle/debounce in production\r\n    socket.emit(\"room-code-update\", { roomId, code: value });\r\n  };\r\n\r\n  const startMatch = () => {\r\n    socket.emit(\"start-match\", { roomId });\r\n  };\r\n\r\n  // Run code via backend /api/run (same as Stage 3)\r\n  const runCode = async () => {\r\n    setRunning(true);\r\n    setStdout(\"\"); setStderr(\"\");\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/run\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ language, code, stdin })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        setStderr(data?.error || \"run failed\");\r\n      } else {\r\n        setStdout(data.stdout || \"\");\r\n        setStderr(data.stderr || \"\");\r\n      }\r\n    } catch (err) {\r\n      setStderr(err.message || \"network error\");\r\n    } finally {\r\n      setRunning(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 1000, margin: \"18px auto\", padding: \"0 12px\" }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <h2>Room: {roomId}</h2>\r\n        <div>\r\n          <strong>{username}</strong>\r\n          <button style={{ marginLeft: 12 }} onClick={() => navigate(\"/\")}>Leave</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 260px\", gap: 12 }}>\r\n        <div>\r\n          <CodeEditor code={code} onChange={handleCodeChange} />\r\n          <RunPanel\r\n            language={language}\r\n            setLanguage={setLanguage}\r\n            stdin={stdin}\r\n            setStdin={setStdin}\r\n            onRun={runCode}\r\n            running={running}\r\n          />\r\n          <OutputPanel stdout={stdout} stderr={stderr} exitCode={null} />\r\n        </div>\r\n\r\n        <aside style={{ borderLeft: \"1px solid #eee\", paddingLeft: 12 }}>\r\n          <h4>Players</h4>\r\n          <ul>\r\n            {players.map(p => (\r\n              <li key={p.socketId}>{p.username}{p.socketId === socket.id ? \" (you)\" : \"\"}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <div style={{ marginTop: 18 }}>\r\n            <button onClick={startMatch}>Start Match</button>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}