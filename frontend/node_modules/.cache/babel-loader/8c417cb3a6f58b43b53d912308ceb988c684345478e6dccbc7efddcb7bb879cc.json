{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pandi\\\\Code-Battle\\\\frontend\\\\src\\\\pages\\\\Room.js\",\n  _s = $RefreshSig$();\n// src/pages/Room.js\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport socket from \"../socket\";\nimport CodeEditor from \"../components/CodeEditor\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Room() {\n  _s();\n  var _location$state;\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const username = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || `guest-${Math.floor(Math.random() * 1000)}`;\n  const [players, setPlayers] = useState([]);\n  const [playerEditors, setPlayerEditors] = useState({}); // { socketId: code }\n  const [scores, setScores] = useState({});\n  const [matchStarted, setMatchStarted] = useState(false);\n  const [isEvaluating, setIsEvaluating] = useState(false);\n\n  // Language selector\n  const [language, setLanguage] = useState(\"javascript\");\n  const [availableLanguages, setAvailableLanguages] = useState([{\n    id: \"javascript\",\n    name: \"JavaScript\"\n  }, {\n    id: \"python\",\n    name: \"Python\"\n  }, {\n    id: \"java\",\n    name: \"Java\"\n  }, {\n    id: \"c\",\n    name: \"C\"\n  }, {\n    id: \"cpp\",\n    name: \"C++\"\n  }, {\n    id: \"csharp\",\n    name: \"C#\"\n  }, {\n    id: \"go\",\n    name: \"Go\"\n  }, {\n    id: \"ruby\",\n    name: \"Ruby\"\n  }, {\n    id: \"rust\",\n    name: \"Rust\"\n  }, {\n    id: \"php\",\n    name: \"PHP\"\n  }]);\n  useEffect(() => {\n    socket.emit(\"join-room\", {\n      roomId,\n      username\n    }, resp => {\n      if (!resp || !resp.ok) {\n        alert(\"Failed to join room: \" + ((resp === null || resp === void 0 ? void 0 : resp.error) || \"unknown\"));\n        navigate(\"/\");\n      }\n    });\n    socket.on(\"player-list\", list => {\n      setPlayers(list);\n\n      // Ensure editor buffers exist\n      setPlayerEditors(prev => {\n        const updated = {\n          ...prev\n        };\n        list.forEach(p => {\n          if (!updated[p.socketId]) updated[p.socketId] = \"// waiting for code...\";\n        });\n        return updated;\n      });\n\n      // Ensure scores are present for all players\n      setScores(prev => {\n        const updated = {\n          ...prev\n        };\n        list.forEach(p => {\n          if (updated[p.socketId] == null) updated[p.socketId] = 0;\n        });\n        return updated;\n      });\n    });\n    socket.on(\"all-codes\", codes => setPlayerEditors(codes));\n    socket.on(\"score-update\", updatedScores => setScores(updatedScores));\n    socket.on(\"match-started\", ({\n      scores: initialScores\n    }) => {\n      setMatchStarted(true);\n      if (initialScores) setScores(initialScores);\n    });\n    socket.on(\"match-stopped\", ({\n      scores\n    }) => {\n      setMatchStarted(false);\n      if (scores) setScores(scores);\n    });\n\n    // Fetch available languages from the backend\n    const fetchLanguages = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/runtimes\");\n        if (response.ok) {\n          const data = await response.json();\n          // Transform the data to match our format\n          const languages = data.map(runtime => ({\n            id: runtime.language,\n            name: runtime.language.charAt(0).toUpperCase() + runtime.language.slice(1)\n          }));\n          // Remove duplicates (in case there are multiple versions of the same language)\n          const uniqueLanguages = Array.from(new Map(languages.map(lang => [lang.id, lang])).values());\n          setAvailableLanguages(uniqueLanguages);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch languages:\", error);\n        // Keep the default languages if fetch fails\n      }\n    };\n    fetchLanguages();\n    return () => {\n      socket.emit(\"leave-room\", {\n        roomId\n      });\n      socket.off(\"player-list\");\n      socket.off(\"all-codes\");\n      socket.off(\"score-update\");\n      socket.off(\"match-started\");\n      socket.off(\"match-stopped\");\n    };\n  }, [roomId, username, navigate]);\n  const handleCodeChange = (playerId, value) => {\n    setPlayerEditors(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n    socket.emit(\"code-change\", {\n      roomId,\n      code: value\n    });\n  };\n  const startMatch = () => socket.emit(\"start-match\", {\n    roomId\n  });\n  const stopMatch = () => socket.emit(\"stop-match\", {\n    roomId\n  });\n  const runOwnCode = async () => {\n    const code = playerEditors[socket.id] || \"\";\n    setIsEvaluating(true);\n    try {\n      const resp = await fetch(\"http://localhost:5000/api/run\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          language,\n          // keep simple; enhance later with per-editor choice\n          code,\n          stdin: \"\",\n          roomId,\n          socketId: socket.id // critical for awarding points\n        })\n      });\n      const data = await resp.json();\n      if (!resp.ok) {\n        alert((data === null || data === void 0 ? void 0 : data.error) || \"Run failed\");\n      } else {\n        // Scoring happens server-side if match is active and exitCode===0\n        // You can show output here if you want:\n        console.log(\"Run result:\", data);\n        if (data.exitCode === 0) {\n          // optional local toast\n          console.log(\"Success âœ“ (point should be awarded)\");\n          alert(\"Run successful! +1 point\");\n        } else {\n          console.log(\"Program error or failed test.\");\n          alert(\"Run failed. Your code has errors.\");\n        }\n      }\n    } catch (e) {\n      alert(e.message || \"Network error\");\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n  const submitCode = async () => {\n    const code = playerEditors[socket.id] || \"\";\n    setIsEvaluating(true);\n    try {\n      const resp = await fetch(\"http://localhost:5000/api/run\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          language,\n          code,\n          stdin: \"\",\n          roomId,\n          socketId: socket.id,\n          isSubmission: true // Flag to indicate this is a submission\n        })\n      });\n      const data = await resp.json();\n      if (!resp.ok) {\n        alert((data === null || data === void 0 ? void 0 : data.error) || \"Submission failed\");\n      } else {\n        if (data.exitCode === 0) {\n          // Add 2 points for a successful submission\n          socket.emit(\"update-score\", {\n            roomId,\n            points: 2\n          });\n          alert(\"Submission successful! +2 points\");\n        } else {\n          alert(\"Submission failed. Your code has errors.\");\n        }\n      }\n    } catch (e) {\n      alert(e.message || \"Network error\");\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      height: \"100vh\",\n      boxSizing: \"border-box\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Logged in as: \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"language-select\",\n          style: {\n            marginRight: \"10px\",\n            fontWeight: \"bold\"\n          },\n          children: \"Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"language-select\",\n          value: language,\n          onChange: e => setLanguage(e.target.value),\n          style: {\n            padding: \"8px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"#f8f8f8\",\n            cursor: \"pointer\",\n            fontSize: \"14px\"\n          },\n          children: availableLanguages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang.id,\n            children: lang.name\n          }, lang.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        display: \"flex\",\n        gap: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runOwnCode,\n        disabled: !matchStarted || isEvaluating,\n        style: {\n          padding: \"8px 16px\",\n          backgroundColor: \"#4CAF50\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: matchStarted && !isEvaluating ? \"pointer\" : \"not-allowed\",\n          fontWeight: \"bold\",\n          opacity: isEvaluating ? 0.7 : 1,\n          minWidth: \"100px\"\n        },\n        children: isEvaluating ? \"Running...\" : \"Run Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitCode,\n        disabled: !matchStarted || isEvaluating,\n        style: {\n          padding: \"8px 16px\",\n          backgroundColor: \"#2196F3\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: matchStarted && !isEvaluating ? \"pointer\" : \"not-allowed\",\n          fontWeight: \"bold\",\n          opacity: isEvaluating ? 0.7 : 1,\n          minWidth: \"100px\"\n        },\n        children: isEvaluating ? \"Submitting...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 12\n      },\n      children: !matchStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startMatch,\n        children: \"Start Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopMatch,\n        children: \"Stop Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: players.map(p => {\n          var _scores$p$socketId;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [p.username, p.socketId === socket.id ? \" (You)\" : \"\", \": \", (_scores$p$socketId = scores[p.socketId]) !== null && _scores$p$socketId !== void 0 ? _scores$p$socketId : 0]\n          }, p.socketId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Runs award points only while a match is active and if the program exits with code 0.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n        gridTemplateRows: \"1fr 1fr\",\n        gap: \"10px\",\n        height: \"85vh\"\n      },\n      children: Array.from({\n        length: 4\n      }).map((_, idx) => {\n        var _scores$player$socket;\n        const player = players[idx];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            minHeight: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"#eee\",\n              padding: \"5px\",\n              flexShrink: 0\n            },\n            children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [player.username, player.socketId === socket.id && \" (You)\", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  float: \"right\"\n                },\n                children: [(_scores$player$socket = scores[player === null || player === void 0 ? void 0 : player.socketId]) !== null && _scores$player$socket !== void 0 ? _scores$player$socket : 0, \" pts\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : `Waiting for player ${idx + 1}...`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              minHeight: 0,\n              overflow: \"hidden\"\n            },\n            children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n                code: playerEditors[player.socketId] || \"\",\n                onChange: value => handleCodeChange(player.socketId, value),\n                readOnly: player.socketId !== socket.id,\n                language: player.socketId === socket.id ? language : language,\n                style: {\n                  width: \"100%\",\n                  height: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 21\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                background: \"#f9f9f9\"\n              },\n              children: \"Waiting for player...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, (player === null || player === void 0 ? void 0 : player.socketId) || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"f60GdA/Rmxcv5ZlA/D9TG+FQTV4=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","useParams","socket","CodeEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","Room","_s","_location$state","roomId","location","navigate","username","state","Math","floor","random","players","setPlayers","playerEditors","setPlayerEditors","scores","setScores","matchStarted","setMatchStarted","isEvaluating","setIsEvaluating","language","setLanguage","availableLanguages","setAvailableLanguages","id","name","emit","resp","ok","alert","error","on","list","prev","updated","forEach","p","socketId","codes","updatedScores","initialScores","fetchLanguages","response","fetch","data","json","languages","map","runtime","charAt","toUpperCase","slice","uniqueLanguages","Array","from","Map","lang","values","console","off","handleCodeChange","playerId","value","code","startMatch","stopMatch","runOwnCode","method","headers","body","JSON","stringify","stdin","log","exitCode","e","message","submitCode","isSubmission","points","style","padding","height","boxSizing","position","children","display","alignItems","justifyContent","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","marginRight","fontWeight","onChange","target","borderRadius","border","backgroundColor","cursor","fontSize","top","right","gap","onClick","disabled","color","opacity","minWidth","_scores$p$socketId","gridTemplateColumns","gridTemplateRows","length","_","idx","_scores$player$socket","player","flexDirection","minHeight","background","flexShrink","float","flex","overflow","readOnly","width","_c","$RefreshReg$"],"sources":["C:/Users/pandi/Code-Battle/frontend/src/pages/Room.js"],"sourcesContent":["// src/pages/Room.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport socket from \"../socket\";\r\nimport CodeEditor from \"../components/CodeEditor\";\r\n\r\nfunction Room() {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const username =\r\n    location.state?.username || `guest-${Math.floor(Math.random() * 1000)}`;\r\n\r\n  const [players, setPlayers] = useState([]);\r\n  const [playerEditors, setPlayerEditors] = useState({}); // { socketId: code }\r\n  const [scores, setScores] = useState({});\r\n  const [matchStarted, setMatchStarted] = useState(false);\r\n  const [isEvaluating, setIsEvaluating] = useState(false);\r\n\r\n  // Language selector\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n  const [availableLanguages, setAvailableLanguages] = useState([\r\n    { id: \"javascript\", name: \"JavaScript\" },\r\n    { id: \"python\", name: \"Python\" },\r\n    { id: \"java\", name: \"Java\" },\r\n    { id: \"c\", name: \"C\" },\r\n    { id: \"cpp\", name: \"C++\" },\r\n    { id: \"csharp\", name: \"C#\" },\r\n    { id: \"go\", name: \"Go\" },\r\n    { id: \"ruby\", name: \"Ruby\" },\r\n    { id: \"rust\", name: \"Rust\" },\r\n    { id: \"php\", name: \"PHP\" }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"join-room\", { roomId, username }, (resp) => {\r\n      if (!resp || !resp.ok) {\r\n        alert(\"Failed to join room: \" + (resp?.error || \"unknown\"));\r\n        navigate(\"/\");\r\n      }\r\n    });\r\n\r\n    socket.on(\"player-list\", (list) => {\r\n      setPlayers(list);\r\n\r\n      // Ensure editor buffers exist\r\n      setPlayerEditors((prev) => {\r\n        const updated = { ...prev };\r\n        list.forEach((p) => {\r\n          if (!updated[p.socketId]) updated[p.socketId] = \"// waiting for code...\";\r\n        });\r\n        return updated;\r\n      });\r\n\r\n      // Ensure scores are present for all players\r\n      setScores((prev) => {\r\n        const updated = { ...prev };\r\n        list.forEach((p) => {\r\n          if (updated[p.socketId] == null) updated[p.socketId] = 0;\r\n        });\r\n        return updated;\r\n      });\r\n    });\r\n\r\n    socket.on(\"all-codes\", (codes) => setPlayerEditors(codes));\r\n    socket.on(\"score-update\", (updatedScores) => setScores(updatedScores));\r\n\r\n    socket.on(\"match-started\", ({ scores: initialScores }) => {\r\n      setMatchStarted(true);\r\n      if (initialScores) setScores(initialScores);\r\n    });\r\n    socket.on(\"match-stopped\", ({ scores }) => {\r\n      setMatchStarted(false);\r\n      if (scores) setScores(scores);\r\n    });\r\n\r\n    // Fetch available languages from the backend\r\n    const fetchLanguages = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/runtimes\");\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          // Transform the data to match our format\r\n          const languages = data.map(runtime => ({\r\n            id: runtime.language,\r\n            name: runtime.language.charAt(0).toUpperCase() + runtime.language.slice(1)\r\n          }));\r\n          // Remove duplicates (in case there are multiple versions of the same language)\r\n          const uniqueLanguages = Array.from(new Map(languages.map(lang => [lang.id, lang])).values());\r\n          setAvailableLanguages(uniqueLanguages);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch languages:\", error);\r\n        // Keep the default languages if fetch fails\r\n      }\r\n    };\r\n\r\n    fetchLanguages();\r\n\r\n    return () => {\r\n      socket.emit(\"leave-room\", { roomId });\r\n      socket.off(\"player-list\");\r\n      socket.off(\"all-codes\");\r\n      socket.off(\"score-update\");\r\n      socket.off(\"match-started\");\r\n      socket.off(\"match-stopped\");\r\n    };\r\n  }, [roomId, username, navigate]);\r\n\r\n  const handleCodeChange = (playerId, value) => {\r\n    setPlayerEditors((prev) => ({ ...prev, [playerId]: value }));\r\n    socket.emit(\"code-change\", { roomId, code: value });\r\n  };\r\n\r\n  const startMatch = () => socket.emit(\"start-match\", { roomId });\r\n  const stopMatch = () => socket.emit(\"stop-match\", { roomId });\r\n\r\n  const runOwnCode = async () => {\r\n    const code = playerEditors[socket.id] || \"\";\r\n    setIsEvaluating(true);\r\n    try {\r\n      const resp = await fetch(\"http://localhost:5000/api/run\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          language, // keep simple; enhance later with per-editor choice\r\n          code,\r\n          stdin: \"\",\r\n          roomId,\r\n          socketId: socket.id, // critical for awarding points\r\n        }),\r\n      });\r\n      const data = await resp.json();\r\n      if (!resp.ok) {\r\n        alert(data?.error || \"Run failed\");\r\n      } else {\r\n        // Scoring happens server-side if match is active and exitCode===0\r\n        // You can show output here if you want:\r\n        console.log(\"Run result:\", data);\r\n        if (data.exitCode === 0) {\r\n          // optional local toast\r\n          console.log(\"Success âœ“ (point should be awarded)\");\r\n          alert(\"Run successful! +1 point\");\r\n        } else {\r\n          console.log(\"Program error or failed test.\");\r\n          alert(\"Run failed. Your code has errors.\");\r\n        }\r\n      }\r\n    } catch (e) {\r\n      alert(e.message || \"Network error\");\r\n    } finally {\r\n      setIsEvaluating(false);\r\n    }\r\n  };\r\n\r\n  const submitCode = async () => {\r\n    const code = playerEditors[socket.id] || \"\";\r\n    setIsEvaluating(true);\r\n    try {\r\n      const resp = await fetch(\"http://localhost:5000/api/run\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          language,\r\n          code,\r\n          stdin: \"\",\r\n          roomId,\r\n          socketId: socket.id,\r\n          isSubmission: true, // Flag to indicate this is a submission\r\n        }),\r\n      });\r\n      const data = await resp.json();\r\n      if (!resp.ok) {\r\n        alert(data?.error || \"Submission failed\");\r\n      } else {\r\n        if (data.exitCode === 0) {\r\n          // Add 2 points for a successful submission\r\n          socket.emit(\"update-score\", { roomId, points: 2 });\r\n          alert(\"Submission successful! +2 points\");\r\n        } else {\r\n          alert(\"Submission failed. Your code has errors.\");\r\n        }\r\n      }\r\n    } catch (e) {\r\n      alert(e.message || \"Network error\");\r\n    } finally {\r\n      setIsEvaluating(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", height: \"100vh\", boxSizing: \"border-box\", position: \"relative\" }}>\r\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", marginBottom: \"10px\" }}>\r\n        <div>\r\n          <h2>Room: {roomId}</h2>\r\n          <p>Logged in as: {username}</p>\r\n        </div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <label htmlFor=\"language-select\" style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n            Language:\r\n          </label>\r\n          <select \r\n            id=\"language-select\"\r\n            value={language}\r\n            onChange={(e) => setLanguage(e.target.value)}\r\n            style={{\r\n              padding: \"8px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: \"#f8f8f8\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"14px\"\r\n            }}\r\n          >\r\n            {availableLanguages.map((lang) => (\r\n              <option key={lang.id} value={lang.id}>\r\n                {lang.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Dedicated Run and Submit buttons in top right */}\r\n      <div style={{ \r\n        position: \"absolute\", \r\n        top: \"20px\", \r\n        right: \"20px\", \r\n        display: \"flex\", \r\n        gap: \"10px\" \r\n      }}>\r\n        <button \r\n          onClick={runOwnCode} \r\n          disabled={!matchStarted || isEvaluating} \r\n          style={{ \r\n            padding: \"8px 16px\", \r\n            backgroundColor: \"#4CAF50\", \r\n            color: \"white\", \r\n            border: \"none\", \r\n            borderRadius: \"4px\", \r\n            cursor: (matchStarted && !isEvaluating) ? \"pointer\" : \"not-allowed\", \r\n            fontWeight: \"bold\",\r\n            opacity: isEvaluating ? 0.7 : 1,\r\n            minWidth: \"100px\"\r\n          }}\r\n        >\r\n          {isEvaluating ? \"Running...\" : \"Run Code\"}\r\n        </button>\r\n        <button \r\n          onClick={submitCode} \r\n          disabled={!matchStarted || isEvaluating} \r\n          style={{ \r\n            padding: \"8px 16px\", \r\n            backgroundColor: \"#2196F3\", \r\n            color: \"white\", \r\n            border: \"none\", \r\n            borderRadius: \"4px\", \r\n            cursor: (matchStarted && !isEvaluating) ? \"pointer\" : \"not-allowed\", \r\n            fontWeight: \"bold\",\r\n            opacity: isEvaluating ? 0.7 : 1,\r\n            minWidth: \"100px\"\r\n          }}\r\n        >\r\n          {isEvaluating ? \"Submitting...\" : \"Submit\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Match controls */}\r\n      <div style={{ marginBottom: 12 }}>\r\n        {!matchStarted ? (\r\n          <button onClick={startMatch}>Start Match</button>\r\n        ) : (\r\n          <button onClick={stopMatch}>Stop Match</button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Scoreboard */}\r\n      <div style={{ marginBottom: 16 }}>\r\n        <h3>Scores</h3>\r\n        <ul>\r\n          {players.map((p) => (\r\n            <li key={p.socketId}>\r\n              {p.username}\r\n              {p.socketId === socket.id ? \" (You)\" : \"\"}: {scores[p.socketId] ?? 0}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <small>\r\n          Runs award points only while a match is active and if the program exits with code 0.\r\n        </small>\r\n      </div>\r\n\r\n      {/* 2x2 editors grid */}\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"1fr 1fr\",\r\n          gridTemplateRows: \"1fr 1fr\",\r\n          gap: \"10px\",\r\n          height: \"85vh\",\r\n        }}\r\n      >\r\n        {Array.from({ length: 4 }).map((_, idx) => {\r\n          const player = players[idx];\r\n\r\n          return (\r\n            <div\r\n              key={player?.socketId || idx}\r\n              style={{\r\n                border: \"1px solid #ccc\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                minHeight: 0,\r\n              }}\r\n            >\r\n              <div style={{ background: \"#eee\", padding: \"5px\", flexShrink: 0 }}>\r\n                {player ? (\r\n                  <>\r\n                    {player.username}\r\n                    {player.socketId === socket.id && \" (You)\"}\r\n                    <span style={{ float: \"right\" }}>\r\n                      {scores[player?.socketId] ?? 0} pts\r\n                    </span>\r\n                  </>\r\n                ) : (\r\n                  `Waiting for player ${idx + 1}...`\r\n                )}\r\n              </div>\r\n\r\n              <div style={{ flex: 1, minHeight: 0, overflow: \"hidden\" }}>\r\n                {player ? (\r\n                  <>\r\n                    <CodeEditor\r\n                      code={playerEditors[player.socketId] || \"\"}\r\n                      onChange={(value) => handleCodeChange(player.socketId, value)}\r\n                      readOnly={player.socketId !== socket.id}\r\n                      language={player.socketId === socket.id ? language : language}\r\n                      style={{ width: \"100%\", height: \"100%\" }}\r\n                    />\r\n                    {/* Removed individual Run button since we now have dedicated buttons in the top right */}\r\n                  </>\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      background: \"#f9f9f9\",\r\n                    }}\r\n                  >\r\n                    Waiting for player...\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}