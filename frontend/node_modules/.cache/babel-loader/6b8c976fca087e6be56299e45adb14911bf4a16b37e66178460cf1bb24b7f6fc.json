{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pandi\\\\Code-Battle\\\\frontend\\\\src\\\\pages\\\\Room.js\",\n  _s = $RefreshSig$();\n// src/pages/Room.js\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport socket from \"../socket\";\nimport CodeEditor from \"../components/CodeEditor\";\nimport TestResultsPanel from \"../components/TestResultsPanel\";\nimport MatchResultsPanel from \"../components/MatchResultsPanel\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Room() {\n  _s();\n  var _location$state;\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const username = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || `guest-${Math.floor(Math.random() * 1000)}`;\n  const [players, setPlayers] = useState([]);\n  const [playerEditors, setPlayerEditors] = useState({}); // { socketId: code }\n  const [scores, setScores] = useState({});\n  const [matchStarted, setMatchStarted] = useState(false);\n  const [isEvaluating, setIsEvaluating] = useState(false);\n\n  // Language selector\n  const [language, setLanguage] = useState(\"javascript\");\n  const [availableLanguages, setAvailableLanguages] = useState([]);\n  const [isLoadingLanguages, setIsLoadingLanguages] = useState(true);\n\n  // Challenge state\n  const [currentChallenge, setCurrentChallenge] = useState(null);\n\n  // Test results state\n  const [testResults, setTestResults] = useState(null);\n  const [isSubmissionResults, setIsSubmissionResults] = useState(false);\n\n  // Match results state\n  const [matchResults, setMatchResults] = useState(null);\n\n  // Track if current user is the room creator\n  const [isRoomCreator, setIsRoomCreator] = useState(false);\n  useEffect(() => {\n    socket.emit(\"join-room\", {\n      roomId,\n      username\n    }, resp => {\n      if (!resp || !resp.ok) {\n        alert(\"Failed to join room: \" + ((resp === null || resp === void 0 ? void 0 : resp.error) || \"unknown\"));\n        navigate(\"/\");\n      } else {\n        // If this is a new room, the current user is the creator\n        if (players.length === 0) {\n          setIsRoomCreator(true);\n        }\n      }\n    });\n    socket.on(\"player-list\", list => {\n      setPlayers(list);\n\n      // Ensure editor buffers exist\n      setPlayerEditors(prev => {\n        const updated = {\n          ...prev\n        };\n        list.forEach(p => {\n          if (!updated[p.socketId]) {\n            // If it's the current user, initialize with language template\n            if (p.socketId === socket.id) {\n              updated[p.socketId] = getStarterTemplate(language);\n            } else {\n              updated[p.socketId] = \"// waiting for code...\";\n            }\n          }\n        });\n        return updated;\n      });\n\n      // Ensure scores are present for all players\n      setScores(prev => {\n        const updated = {\n          ...prev\n        };\n        list.forEach(p => {\n          if (updated[p.socketId] == null) updated[p.socketId] = 0;\n        });\n        return updated;\n      });\n\n      // Check if current user is the room creator (first player to join)\n      if (list.length > 0 && list[0].socketId === socket.id) {\n        setIsRoomCreator(true);\n      } else {\n        setIsRoomCreator(false);\n      }\n    });\n    socket.on(\"all-codes\", codes => setPlayerEditors(codes));\n    socket.on(\"score-update\", updatedScores => setScores(updatedScores));\n    socket.on(\"match-started\", ({\n      scores: initialScores,\n      challenge\n    }) => {\n      setMatchStarted(true);\n      if (initialScores) setScores(initialScores);\n      if (challenge) setCurrentChallenge(challenge);\n    });\n\n    // Listen for new challenges\n    socket.on(\"new-challenge\", challenge => {\n      setCurrentChallenge(challenge);\n    });\n    socket.on(\"match-stopped\", ({\n      scores,\n      winners,\n      winnerDetails,\n      challengeDetails,\n      matchSummary\n    }) => {\n      setMatchStarted(false);\n      if (scores) setScores(scores);\n\n      // Display match results to all players\n      if (matchSummary) {\n        alert(matchSummary);\n      }\n\n      // Store winner information for display\n      setMatchResults({\n        winners: winnerDetails || [],\n        challenge: challengeDetails,\n        scores\n      });\n    });\n\n    // Listen for match errors\n    socket.on(\"match-error\", ({\n      error\n    }) => {\n      alert(error);\n    });\n\n    // Match error handling is now added\n\n    // We'll use our predefined languages instead of fetching all from the backend\n    // This keeps the language selection limited to the ones we want to support\n    const fetchLanguages = async () => {\n      setIsLoadingLanguages(true);\n      try {\n        // We'll still fetch from the backend to ensure our languages are supported\n        const response = await fetch(\"http://localhost:5000/api/runtimes\");\n        if (response.ok) {\n          const data = await response.json();\n          // Get the list of supported language IDs from the backend\n          const supportedLanguageIds = data.map(runtime => runtime.language);\n\n          // Filter our predefined languages to only include those supported by the backend\n          const filteredLanguages = [{\n            id: \"javascript\",\n            name: \"JavaScript\"\n          }, {\n            id: \"python\",\n            name: \"Python\"\n          }, {\n            id: \"java\",\n            name: \"Java\"\n          }, {\n            id: \"c\",\n            name: \"C\"\n          }, {\n            id: \"cpp\",\n            name: \"C++\"\n          }, {\n            id: \"csharp\",\n            name: \"C#\"\n          }, {\n            id: \"go\",\n            name: \"Go\"\n          }, {\n            id: \"ruby\",\n            name: \"Ruby\"\n          }, {\n            id: \"rust\",\n            name: \"Rust\"\n          }, {\n            id: \"php\",\n            name: \"PHP\"\n          }].filter(lang => supportedLanguageIds.includes(lang.id));\n          setAvailableLanguages(filteredLanguages);\n        } else {\n          // If API fails, use default languages\n          setAvailableLanguages([{\n            id: \"javascript\",\n            name: \"JavaScript\"\n          }, {\n            id: \"python\",\n            name: \"Python\"\n          }, {\n            id: \"java\",\n            name: \"Java\"\n          }]);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch languages:\", error);\n        // Use a minimal set of default languages if fetch fails\n        setAvailableLanguages([{\n          id: \"javascript\",\n          name: \"JavaScript\"\n        }, {\n          id: \"python\",\n          name: \"Python\"\n        }, {\n          id: \"java\",\n          name: \"Java\"\n        }]);\n      } finally {\n        setIsLoadingLanguages(false);\n      }\n    };\n    fetchLanguages();\n    return () => {\n      socket.emit(\"leave-room\", {\n        roomId\n      });\n      socket.off(\"player-list\");\n      socket.off(\"all-codes\");\n      socket.off(\"score-update\");\n      socket.off(\"match-started\");\n      socket.off(\"match-stopped\");\n      socket.off(\"new-challenge\");\n      socket.off(\"match-error\");\n\n      // Reset match state\n      setMatchResults(null);\n    };\n  }, [roomId, username, navigate]);\n  const handleCodeChange = (playerId, value) => {\n    setPlayerEditors(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n    socket.emit(\"code-change\", {\n      roomId,\n      code: value\n    });\n  };\n\n  // Generate starter code template based on selected language\n  const getStarterTemplate = lang => {\n    switch (lang) {\n      case 'javascript':\n        return '// JavaScript code\\nconsole.log(\"Hello, World!\");';\n      case 'python':\n        return '# Python code\\nprint(\"Hello, World!\")';\n      case 'java':\n        return '// Java code\\npublic class Main {\\n    public static void main(String[] args) {\\n        System.out.println(\"Hello, World!\");\\n    }\\n}';\n      case 'c':\n        return '// C code\\n#include <stdio.h>\\n\\nint main() {\\n    printf(\"Hello, World!\\n\");\\n    return 0;\\n}';\n      case 'cpp':\n        return '// C++ code\\n#include <iostream>\\n\\nint main() {\\n    std::cout << \"Hello, World!\" << std::endl;\\n    return 0;\\n}';\n      case 'csharp':\n        return '// C# code\\nusing System;\\n\\nclass Program {\\n    static void Main() {\\n        Console.WriteLine(\"Hello, World!\");\\n    }\\n}';\n      case 'go':\n        return '// Go code\\npackage main\\n\\nimport \"fmt\"\\n\\nfunc main() {\\n    fmt.Println(\"Hello, World!\")\\n}';\n      case 'ruby':\n        return '# Ruby code\\nputs \"Hello, World!\"';\n      case 'rust':\n        return '// Rust code\\nfn main() {\\n    println!(\"Hello, World!\");\\n}';\n      case 'php':\n        return '<?php\\n// PHP code\\necho \"Hello, World!\";\\n?>';\n      default:\n        return '// Write your code here';\n    }\n  };\n  const startMatch = () => socket.emit(\"start-match\", {\n    roomId\n  });\n  const stopMatch = () => socket.emit(\"stop-match\", {\n    roomId\n  });\n  const runOwnCode = async () => {\n    const code = playerEditors[socket.id] || \"\";\n    setIsEvaluating(true);\n    setTestResults(null); // Clear previous test results\n    try {\n      const resp = await fetch(\"http://localhost:5000/api/run\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          language,\n          // Now using the selected language from state\n          code,\n          stdin: \"\",\n          roomId,\n          socketId: socket.id // critical for awarding points\n        })\n      });\n      const data = await resp.json();\n      if (!resp.ok) {\n        alert((data === null || data === void 0 ? void 0 : data.error) || \"Run failed\");\n      } else {\n        // Display test results\n        console.log(\"Run result:\", data);\n        setTestResults(data.testResults || []);\n        setIsSubmissionResults(false);\n        if (data.passedTests === 0) {\n          // No tests passed\n          console.log(\"No tests passed.\");\n        } else if (data.passedTests === data.totalTests) {\n          // All tests passed\n          console.log(`All tests passed! (${data.passedTests}/${data.totalTests})`);\n        } else {\n          // Some tests passed\n          console.log(`${data.passedTests}/${data.totalTests} tests passed.`);\n        }\n\n        // Points are awarded server-side\n        if (data.pointsAwarded) {\n          console.log(`+${data.pointsAwarded} point(s) awarded!`);\n        }\n      }\n    } catch (e) {\n      alert(e.message || \"Network error\");\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n  const submitCode = async () => {\n    const code = playerEditors[socket.id] || \"\";\n    setIsEvaluating(true);\n    setTestResults(null); // Clear previous test results\n    try {\n      const resp = await fetch(\"http://localhost:5000/api/run\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          language,\n          // Using the selected language from state\n          code,\n          stdin: \"\",\n          roomId,\n          socketId: socket.id,\n          isSubmission: true // Flag to indicate this is a submission\n        })\n      });\n      const data = await resp.json();\n      if (!resp.ok) {\n        alert((data === null || data === void 0 ? void 0 : data.error) || \"Submission failed\");\n      } else {\n        // Display test results\n        console.log(\"Submission result:\", data);\n        setTestResults(data.testResults || []);\n        setIsSubmissionResults(true);\n        if (data.passedTests === 0) {\n          // No tests passed\n          alert(\"Your submission didn't pass any tests. No points awarded.\");\n        } else if (data.passedTests === data.totalTests) {\n          // All tests passed\n          alert(`Great job! Your solution passed all ${data.totalTests} test cases.`);\n        } else {\n          // Some tests passed\n          alert(`Your solution passed ${data.passedTests} out of ${data.totalTests} test cases.`);\n        }\n\n        // Points are awarded server-side\n        if (data.pointsAwarded) {\n          alert(`+${data.pointsAwarded} points awarded for passing hidden test cases!`);\n        }\n      }\n    } catch (e) {\n      alert(e.message || \"Network error\");\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      height: \"100vh\",\n      boxSizing: \"border-box\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Logged in as: \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"language-select\",\n          style: {\n            marginRight: \"10px\",\n            fontWeight: \"bold\"\n          },\n          children: \"Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), isLoadingLanguages ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"8px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"#f8f8f8\",\n            fontSize: \"14px\",\n            minWidth: \"120px\",\n            textAlign: \"center\"\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"language-select\",\n          value: language,\n          onChange: e => {\n            const newLanguage = e.target.value;\n            setLanguage(newLanguage);\n            // Update code with template for the new language if current editor is empty or has default template\n            if (socket.id && playerEditors[socket.id]) {\n              const currentCode = playerEditors[socket.id];\n              // Check if current code is empty or just a default template\n              const isDefaultOrEmpty = currentCode.trim() === \"\" || availableLanguages.some(lang => currentCode === getStarterTemplate(lang.id));\n              if (isDefaultOrEmpty) {\n                const newTemplate = getStarterTemplate(newLanguage);\n                handleCodeChange(socket.id, newTemplate);\n              }\n            }\n          },\n          style: {\n            padding: \"8px\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"#f8f8f8\",\n            cursor: \"pointer\",\n            fontSize: \"14px\",\n            minWidth: \"120px\"\n          },\n          disabled: availableLanguages.length === 0,\n          children: availableLanguages.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"No languages available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this) : availableLanguages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang.id,\n            children: lang.name\n          }, lang.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        display: \"flex\",\n        gap: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runOwnCode,\n        disabled: !matchStarted || isEvaluating,\n        style: {\n          padding: \"8px 16px\",\n          backgroundColor: \"#4CAF50\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: matchStarted && !isEvaluating ? \"pointer\" : \"not-allowed\",\n          fontWeight: \"bold\",\n          opacity: isEvaluating ? 0.7 : 1,\n          minWidth: \"100px\"\n        },\n        children: isEvaluating ? \"Running...\" : \"Run Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitCode,\n        disabled: !matchStarted || isEvaluating,\n        style: {\n          padding: \"8px 16px\",\n          backgroundColor: \"#2196F3\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: matchStarted && !isEvaluating ? \"pointer\" : \"not-allowed\",\n          fontWeight: \"bold\",\n          opacity: isEvaluating ? 0.7 : 1,\n          minWidth: \"100px\"\n        },\n        children: isEvaluating ? \"Submitting...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 12\n      },\n      children: isRoomCreator ? !matchStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startMatch,\n        disabled: players.length < 2,\n        title: players.length < 2 ? \"Need at least 2 players to start\" : \"\",\n        style: {\n          opacity: players.length < 2 ? 0.6 : 1,\n          cursor: players.length < 2 ? \"not-allowed\" : \"pointer\"\n        },\n        children: [\"Start Match \", players.length < 2 ? \"(Need more players)\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopMatch,\n        children: \"Stop Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 13\n      }, this) : matchStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Match in progress...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Waiting for room creator to start the match...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), currentChallenge && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16,\n        padding: \"15px\",\n        backgroundColor: \"#f8f9fa\",\n        borderRadius: \"8px\",\n        border: \"1px solid #dee2e6\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0\n        },\n        children: currentChallenge.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: \"pre-wrap\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 16\n          }, this), \" \", currentChallenge.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), currentChallenge.constraints && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Constraints:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 18\n          }, this), \" \", currentChallenge.constraints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Example Input:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              style: {\n                backgroundColor: \"#e9ecef\",\n                padding: \"10px\",\n                borderRadius: \"4px\",\n                overflowX: \"auto\"\n              },\n              children: currentChallenge.exampleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Example Output:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              style: {\n                backgroundColor: \"#e9ecef\",\n                padding: \"10px\",\n                borderRadius: \"4px\",\n                overflowX: \"auto\"\n              },\n              children: currentChallenge.exampleOutput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Difficulty:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 16\n          }, this), \" \", currentChallenge.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }, this), !matchStarted && matchResults && /*#__PURE__*/_jsxDEV(MatchResultsPanel, {\n      matchResults: matchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 41\n    }, this), testResults && testResults.length > 0 && /*#__PURE__*/_jsxDEV(TestResultsPanel, {\n      testResults: testResults,\n      isSubmission: isSubmissionResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: players.map(p => {\n          var _scores$p$socketId;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [p.username, p.socketId === socket.id ? \" (You)\" : \"\", \": \", (_scores$p$socketId = scores[p.socketId]) !== null && _scores$p$socketId !== void 0 ? _scores$p$socketId : 0]\n          }, p.socketId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Run: +1 point (one-time only) for passing visible test cases. Submit: +10 points per hidden test case passed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n        gridTemplateRows: \"1fr 1fr\",\n        gap: \"10px\",\n        height: \"85vh\"\n      },\n      children: Array.from({\n        length: 4\n      }).map((_, idx) => {\n        var _scores$player$socket;\n        const player = players[idx];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            minHeight: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"#eee\",\n              padding: \"5px\",\n              flexShrink: 0\n            },\n            children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [player.username, player.socketId === socket.id && \" (You)\", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  float: \"right\"\n                },\n                children: [(_scores$player$socket = scores[player === null || player === void 0 ? void 0 : player.socketId]) !== null && _scores$player$socket !== void 0 ? _scores$player$socket : 0, \" pts\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : `Waiting for player ${idx + 1}...`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              minHeight: 0,\n              overflow: \"hidden\"\n            },\n            children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n                code: playerEditors[player.socketId] || \"\",\n                onChange: value => handleCodeChange(player.socketId, value),\n                readOnly: player.socketId !== socket.id,\n                language: player.socketId === socket.id ? language : language,\n                style: {\n                  width: \"100%\",\n                  height: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 21\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                background: \"#f9f9f9\"\n              },\n              children: \"Waiting for player...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this)]\n        }, (player === null || player === void 0 ? void 0 : player.socketId) || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"hdcFCFBID0RaTBJc9x98iFrzjec=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","useParams","socket","CodeEditor","TestResultsPanel","MatchResultsPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","Room","_s","_location$state","roomId","location","navigate","username","state","Math","floor","random","players","setPlayers","playerEditors","setPlayerEditors","scores","setScores","matchStarted","setMatchStarted","isEvaluating","setIsEvaluating","language","setLanguage","availableLanguages","setAvailableLanguages","isLoadingLanguages","setIsLoadingLanguages","currentChallenge","setCurrentChallenge","testResults","setTestResults","isSubmissionResults","setIsSubmissionResults","matchResults","setMatchResults","isRoomCreator","setIsRoomCreator","emit","resp","ok","alert","error","length","on","list","prev","updated","forEach","p","socketId","id","getStarterTemplate","codes","updatedScores","initialScores","challenge","winners","winnerDetails","challengeDetails","matchSummary","fetchLanguages","response","fetch","data","json","supportedLanguageIds","map","runtime","filteredLanguages","name","filter","lang","includes","console","off","handleCodeChange","playerId","value","code","startMatch","stopMatch","runOwnCode","method","headers","body","JSON","stringify","stdin","log","passedTests","totalTests","pointsAwarded","e","message","submitCode","isSubmission","style","padding","height","boxSizing","position","children","display","alignItems","justifyContent","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","marginRight","fontWeight","borderRadius","border","backgroundColor","fontSize","minWidth","textAlign","onChange","newLanguage","target","currentCode","isDefaultOrEmpty","trim","some","newTemplate","cursor","disabled","top","right","gap","onClick","color","opacity","title","marginTop","whiteSpace","description","constraints","flex","overflowX","exampleInput","exampleOutput","difficulty","_scores$p$socketId","gridTemplateColumns","gridTemplateRows","Array","from","_","idx","_scores$player$socket","player","flexDirection","minHeight","background","flexShrink","float","overflow","readOnly","width","_c","$RefreshReg$"],"sources":["C:/Users/pandi/Code-Battle/frontend/src/pages/Room.js"],"sourcesContent":["// src/pages/Room.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport socket from \"../socket\";\r\nimport CodeEditor from \"../components/CodeEditor\";\r\nimport TestResultsPanel from \"../components/TestResultsPanel\";\r\nimport MatchResultsPanel from \"../components/MatchResultsPanel\";\r\n\r\nfunction Room() {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const username =\r\n    location.state?.username || `guest-${Math.floor(Math.random() * 1000)}`;\r\n\r\n  const [players, setPlayers] = useState([]);\r\n  const [playerEditors, setPlayerEditors] = useState({}); // { socketId: code }\r\n  const [scores, setScores] = useState({});\r\n  const [matchStarted, setMatchStarted] = useState(false);\r\n  const [isEvaluating, setIsEvaluating] = useState(false);\r\n\r\n  // Language selector\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n  const [availableLanguages, setAvailableLanguages] = useState([]);\r\n  const [isLoadingLanguages, setIsLoadingLanguages] = useState(true);\r\n  \r\n  // Challenge state\r\n  const [currentChallenge, setCurrentChallenge] = useState(null);\r\n  \r\n  // Test results state\r\n  const [testResults, setTestResults] = useState(null);\r\n  const [isSubmissionResults, setIsSubmissionResults] = useState(false);\r\n  \r\n  // Match results state\r\n  const [matchResults, setMatchResults] = useState(null);\r\n\r\n\r\n  // Track if current user is the room creator\r\n  const [isRoomCreator, setIsRoomCreator] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"join-room\", { roomId, username }, (resp) => {\r\n      if (!resp || !resp.ok) {\r\n        alert(\"Failed to join room: \" + (resp?.error || \"unknown\"));\r\n        navigate(\"/\");\r\n      } else {\r\n        // If this is a new room, the current user is the creator\r\n        if (players.length === 0) {\r\n          setIsRoomCreator(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    socket.on(\"player-list\", (list) => {\r\n      setPlayers(list);\r\n\r\n      // Ensure editor buffers exist\r\n      setPlayerEditors((prev) => {\r\n        const updated = { ...prev };\r\n        list.forEach((p) => {\r\n          if (!updated[p.socketId]) {\r\n            // If it's the current user, initialize with language template\r\n            if (p.socketId === socket.id) {\r\n              updated[p.socketId] = getStarterTemplate(language);\r\n            } else {\r\n              updated[p.socketId] = \"// waiting for code...\";\r\n            }\r\n          }\r\n        });\r\n        return updated;\r\n      });\r\n\r\n      // Ensure scores are present for all players\r\n      setScores((prev) => {\r\n        const updated = { ...prev };\r\n        list.forEach((p) => {\r\n          if (updated[p.socketId] == null) updated[p.socketId] = 0;\r\n        });\r\n        return updated;\r\n      });\r\n      \r\n      // Check if current user is the room creator (first player to join)\r\n      if (list.length > 0 && list[0].socketId === socket.id) {\r\n        setIsRoomCreator(true);\r\n      } else {\r\n        setIsRoomCreator(false);\r\n      }\r\n    });\r\n\r\n    socket.on(\"all-codes\", (codes) => setPlayerEditors(codes));\r\n    socket.on(\"score-update\", (updatedScores) => setScores(updatedScores));\r\n\r\n    socket.on(\"match-started\", ({ scores: initialScores, challenge }) => {\r\n      setMatchStarted(true);\r\n      if (initialScores) setScores(initialScores);\r\n      if (challenge) setCurrentChallenge(challenge);\r\n    });\r\n    \r\n    // Listen for new challenges\r\n    socket.on(\"new-challenge\", (challenge) => {\r\n      setCurrentChallenge(challenge);\r\n    });\r\n    socket.on(\"match-stopped\", ({ scores, winners, winnerDetails, challengeDetails, matchSummary }) => {\r\n      setMatchStarted(false);\r\n      if (scores) setScores(scores);\r\n      \r\n      // Display match results to all players\r\n      if (matchSummary) {\r\n        alert(matchSummary);\r\n      }\r\n      \r\n      // Store winner information for display\r\n      setMatchResults({\r\n        winners: winnerDetails || [],\r\n        challenge: challengeDetails,\r\n        scores\r\n      });\r\n    });\r\n    \r\n    // Listen for match errors\r\n    socket.on(\"match-error\", ({ error }) => {\r\n      alert(error);\r\n    });\r\n    \r\n    // Match error handling is now added\r\n\r\n    // We'll use our predefined languages instead of fetching all from the backend\r\n    // This keeps the language selection limited to the ones we want to support\r\n    const fetchLanguages = async () => {\r\n      setIsLoadingLanguages(true);\r\n      try {\r\n        // We'll still fetch from the backend to ensure our languages are supported\r\n        const response = await fetch(\"http://localhost:5000/api/runtimes\");\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          // Get the list of supported language IDs from the backend\r\n          const supportedLanguageIds = data.map(runtime => runtime.language);\r\n          \r\n          // Filter our predefined languages to only include those supported by the backend\r\n          const filteredLanguages = [\r\n            { id: \"javascript\", name: \"JavaScript\" },\r\n            { id: \"python\", name: \"Python\" },\r\n            { id: \"java\", name: \"Java\" },\r\n            { id: \"c\", name: \"C\" },\r\n            { id: \"cpp\", name: \"C++\" },\r\n            { id: \"csharp\", name: \"C#\" },\r\n            { id: \"go\", name: \"Go\" },\r\n            { id: \"ruby\", name: \"Ruby\" },\r\n            { id: \"rust\", name: \"Rust\" },\r\n            { id: \"php\", name: \"PHP\" }\r\n          ].filter(lang => supportedLanguageIds.includes(lang.id));\r\n          \r\n          setAvailableLanguages(filteredLanguages);\r\n        } else {\r\n          // If API fails, use default languages\r\n          setAvailableLanguages([\r\n            { id: \"javascript\", name: \"JavaScript\" },\r\n            { id: \"python\", name: \"Python\" },\r\n            { id: \"java\", name: \"Java\" }\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch languages:\", error);\r\n        // Use a minimal set of default languages if fetch fails\r\n        setAvailableLanguages([\r\n          { id: \"javascript\", name: \"JavaScript\" },\r\n          { id: \"python\", name: \"Python\" },\r\n          { id: \"java\", name: \"Java\" }\r\n        ]);\r\n      } finally {\r\n        setIsLoadingLanguages(false);\r\n      }\r\n    };\r\n\r\n    fetchLanguages();\r\n\r\n    return () => {\r\n      socket.emit(\"leave-room\", { roomId });\r\n      socket.off(\"player-list\");\r\n      socket.off(\"all-codes\");\r\n      socket.off(\"score-update\");\r\n      socket.off(\"match-started\");\r\n      socket.off(\"match-stopped\");\r\n      socket.off(\"new-challenge\");\r\n      socket.off(\"match-error\");\r\n      \r\n      // Reset match state\r\n      setMatchResults(null);\r\n    };\r\n  }, [roomId, username, navigate]);\r\n\r\n  const handleCodeChange = (playerId, value) => {\r\n    setPlayerEditors((prev) => ({ ...prev, [playerId]: value }));\r\n    socket.emit(\"code-change\", { roomId, code: value });\r\n  };\r\n\r\n  // Generate starter code template based on selected language\r\n  const getStarterTemplate = (lang) => {\r\n    switch (lang) {\r\n      case 'javascript':\r\n        return '// JavaScript code\\nconsole.log(\"Hello, World!\");';\r\n      case 'python':\r\n        return '# Python code\\nprint(\"Hello, World!\")';\r\n      case 'java':\r\n        return '// Java code\\npublic class Main {\\n    public static void main(String[] args) {\\n        System.out.println(\"Hello, World!\");\\n    }\\n}';\r\n      case 'c':\r\n        return '// C code\\n#include <stdio.h>\\n\\nint main() {\\n    printf(\"Hello, World!\\n\");\\n    return 0;\\n}';\r\n      case 'cpp':\r\n        return '// C++ code\\n#include <iostream>\\n\\nint main() {\\n    std::cout << \"Hello, World!\" << std::endl;\\n    return 0;\\n}';\r\n      case 'csharp':\r\n        return '// C# code\\nusing System;\\n\\nclass Program {\\n    static void Main() {\\n        Console.WriteLine(\"Hello, World!\");\\n    }\\n}';\r\n      case 'go':\r\n        return '// Go code\\npackage main\\n\\nimport \"fmt\"\\n\\nfunc main() {\\n    fmt.Println(\"Hello, World!\")\\n}';\r\n      case 'ruby':\r\n        return '# Ruby code\\nputs \"Hello, World!\"';\r\n      case 'rust':\r\n        return '// Rust code\\nfn main() {\\n    println!(\"Hello, World!\");\\n}';\r\n      case 'php':\r\n        return '<?php\\n// PHP code\\necho \"Hello, World!\";\\n?>';\r\n      default:\r\n        return '// Write your code here';\r\n    }\r\n  };\r\n\r\n  const startMatch = () => socket.emit(\"start-match\", { roomId });\r\n  const stopMatch = () => socket.emit(\"stop-match\", { roomId });\r\n\r\n  const runOwnCode = async () => {\r\n    const code = playerEditors[socket.id] || \"\";\r\n    setIsEvaluating(true);\r\n    setTestResults(null); // Clear previous test results\r\n    try {\r\n      const resp = await fetch(\"http://localhost:5000/api/run\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          language, // Now using the selected language from state\r\n          code,\r\n          stdin: \"\",\r\n          roomId,\r\n          socketId: socket.id, // critical for awarding points\r\n        }),\r\n      });\r\n      const data = await resp.json();\r\n      if (!resp.ok) {\r\n        alert(data?.error || \"Run failed\");\r\n      } else {\r\n        // Display test results\r\n        console.log(\"Run result:\", data);\r\n        setTestResults(data.testResults || []);\r\n        setIsSubmissionResults(false);\r\n        \r\n        if (data.passedTests === 0) {\r\n          // No tests passed\r\n          console.log(\"No tests passed.\");\r\n        } else if (data.passedTests === data.totalTests) {\r\n          // All tests passed\r\n          console.log(`All tests passed! (${data.passedTests}/${data.totalTests})`);\r\n        } else {\r\n          // Some tests passed\r\n          console.log(`${data.passedTests}/${data.totalTests} tests passed.`);\r\n        }\r\n        \r\n        // Points are awarded server-side\r\n        if (data.pointsAwarded) {\r\n          console.log(`+${data.pointsAwarded} point(s) awarded!`);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      alert(e.message || \"Network error\");\r\n    } finally {\r\n      setIsEvaluating(false);\r\n    }\r\n  };\r\n\r\n  const submitCode = async () => {\r\n    const code = playerEditors[socket.id] || \"\";\r\n    setIsEvaluating(true);\r\n    setTestResults(null); // Clear previous test results\r\n    try {\r\n      const resp = await fetch(\"http://localhost:5000/api/run\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          language, // Using the selected language from state\r\n          code,\r\n          stdin: \"\",\r\n          roomId,\r\n          socketId: socket.id,\r\n          isSubmission: true, // Flag to indicate this is a submission\r\n        }),\r\n      });\r\n      const data = await resp.json();\r\n      if (!resp.ok) {\r\n        alert(data?.error || \"Submission failed\");\r\n      } else {\r\n        // Display test results\r\n        console.log(\"Submission result:\", data);\r\n        setTestResults(data.testResults || []);\r\n        setIsSubmissionResults(true);\r\n        \r\n        if (data.passedTests === 0) {\r\n          // No tests passed\r\n          alert(\"Your submission didn't pass any tests. No points awarded.\");\r\n        } else if (data.passedTests === data.totalTests) {\r\n          // All tests passed\r\n          alert(`Great job! Your solution passed all ${data.totalTests} test cases.`);\r\n        } else {\r\n          // Some tests passed\r\n          alert(`Your solution passed ${data.passedTests} out of ${data.totalTests} test cases.`);\r\n        }\r\n        \r\n        // Points are awarded server-side\r\n        if (data.pointsAwarded) {\r\n          alert(`+${data.pointsAwarded} points awarded for passing hidden test cases!`);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      alert(e.message || \"Network error\");\r\n    } finally {\r\n      setIsEvaluating(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", height: \"100vh\", boxSizing: \"border-box\", position: \"relative\" }}>\r\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", marginBottom: \"10px\" }}>\r\n        <div>\r\n          <h2>Room: {roomId}</h2>\r\n          <p>Logged in as: {username}</p>\r\n        </div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <label htmlFor=\"language-select\" style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\r\n            Language:\r\n          </label>\r\n          {isLoadingLanguages ? (\r\n            <div style={{ \r\n              padding: \"8px\", \r\n              borderRadius: \"4px\", \r\n              border: \"1px solid #ccc\", \r\n              backgroundColor: \"#f8f8f8\", \r\n              fontSize: \"14px\",\r\n              minWidth: \"120px\",\r\n              textAlign: \"center\"\r\n            }}>\r\n              Loading...\r\n            </div>\r\n          ) : (\r\n            <select \r\n              id=\"language-select\"\r\n              value={language}\r\n              onChange={(e) => {\r\n                const newLanguage = e.target.value;\r\n                setLanguage(newLanguage);\r\n                // Update code with template for the new language if current editor is empty or has default template\r\n                if (socket.id && playerEditors[socket.id]) {\r\n                  const currentCode = playerEditors[socket.id];\r\n                  // Check if current code is empty or just a default template\r\n                  const isDefaultOrEmpty = currentCode.trim() === \"\" || \r\n                    availableLanguages.some(lang => \r\n                      currentCode === getStarterTemplate(lang.id));\r\n                  \r\n                  if (isDefaultOrEmpty) {\r\n                    const newTemplate = getStarterTemplate(newLanguage);\r\n                    handleCodeChange(socket.id, newTemplate);\r\n                  }\r\n                }\r\n              }}\r\n              style={{\r\n                padding: \"8px\",\r\n                borderRadius: \"4px\",\r\n                border: \"1px solid #ccc\",\r\n                backgroundColor: \"#f8f8f8\",\r\n                cursor: \"pointer\",\r\n                fontSize: \"14px\",\r\n                minWidth: \"120px\"\r\n              }}\r\n              disabled={availableLanguages.length === 0}\r\n            >\r\n              {availableLanguages.length === 0 ? (\r\n                <option>No languages available</option>\r\n              ) : (\r\n                availableLanguages.map((lang) => (\r\n                  <option key={lang.id} value={lang.id}>\r\n                    {lang.name}\r\n                  </option>\r\n                ))\r\n              )}\r\n            </select>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Dedicated Run and Submit buttons in top right */}\r\n      <div style={{ \r\n        position: \"absolute\", \r\n        top: \"20px\", \r\n        right: \"20px\", \r\n        display: \"flex\", \r\n        gap: \"10px\" \r\n      }}>\r\n        <button \r\n          onClick={runOwnCode} \r\n          disabled={!matchStarted || isEvaluating} \r\n          style={{ \r\n            padding: \"8px 16px\", \r\n            backgroundColor: \"#4CAF50\", \r\n            color: \"white\", \r\n            border: \"none\", \r\n            borderRadius: \"4px\", \r\n            cursor: (matchStarted && !isEvaluating) ? \"pointer\" : \"not-allowed\", \r\n            fontWeight: \"bold\",\r\n            opacity: isEvaluating ? 0.7 : 1,\r\n            minWidth: \"100px\"\r\n          }}\r\n        >\r\n          {isEvaluating ? \"Running...\" : \"Run Code\"}\r\n        </button>\r\n        <button \r\n          onClick={submitCode} \r\n          disabled={!matchStarted || isEvaluating} \r\n          style={{ \r\n            padding: \"8px 16px\", \r\n            backgroundColor: \"#2196F3\", \r\n            color: \"white\", \r\n            border: \"none\", \r\n            borderRadius: \"4px\", \r\n            cursor: (matchStarted && !isEvaluating) ? \"pointer\" : \"not-allowed\", \r\n            fontWeight: \"bold\",\r\n            opacity: isEvaluating ? 0.7 : 1,\r\n            minWidth: \"100px\"\r\n          }}\r\n        >\r\n          {isEvaluating ? \"Submitting...\" : \"Submit\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Match controls - only visible to room creator */}\r\n      <div style={{ marginBottom: 12 }}>\r\n        {isRoomCreator ? (\r\n          !matchStarted ? (\r\n            <button \r\n              onClick={startMatch} \r\n              disabled={players.length < 2}\r\n              title={players.length < 2 ? \"Need at least 2 players to start\" : \"\"}\r\n              style={{\r\n                opacity: players.length < 2 ? 0.6 : 1,\r\n                cursor: players.length < 2 ? \"not-allowed\" : \"pointer\"\r\n              }}\r\n            >\r\n              Start Match {players.length < 2 ? \"(Need more players)\" : \"\"}\r\n            </button>\r\n          ) : (\r\n            <button onClick={stopMatch}>Stop Match</button>\r\n          )\r\n        ) : (\r\n          matchStarted ? (\r\n            <div>Match in progress...</div>\r\n          ) : (\r\n            <div>Waiting for room creator to start the match...</div>\r\n          )\r\n        )}\r\n      </div>\r\n\r\n      {/* Challenge Display */}\r\n      {currentChallenge && (\r\n        <div style={{ \r\n          marginBottom: 16, \r\n          padding: \"15px\", \r\n          backgroundColor: \"#f8f9fa\", \r\n          borderRadius: \"8px\", \r\n          border: \"1px solid #dee2e6\" \r\n        }}>\r\n          <h3 style={{ marginTop: 0 }}>{currentChallenge.title}</h3>\r\n          <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n            <p><strong>Description:</strong> {currentChallenge.description}</p>\r\n            {currentChallenge.constraints && (\r\n              <p><strong>Constraints:</strong> {currentChallenge.constraints}</p>\r\n            )}\r\n            <div style={{ display: \"flex\", gap: \"20px\" }}>\r\n              <div style={{ flex: 1 }}>\r\n                <p><strong>Example Input:</strong></p>\r\n                <pre style={{ \r\n                  backgroundColor: \"#e9ecef\", \r\n                  padding: \"10px\", \r\n                  borderRadius: \"4px\", \r\n                  overflowX: \"auto\" \r\n                }}>{currentChallenge.exampleInput}</pre>\r\n              </div>\r\n              <div style={{ flex: 1 }}>\r\n                <p><strong>Example Output:</strong></p>\r\n                <pre style={{ \r\n                  backgroundColor: \"#e9ecef\", \r\n                  padding: \"10px\", \r\n                  borderRadius: \"4px\", \r\n                  overflowX: \"auto\" \r\n                }}>{currentChallenge.exampleOutput}</pre>\r\n              </div>\r\n            </div>\r\n            <p><strong>Difficulty:</strong> {currentChallenge.difficulty}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Match Results Panel - shown when match ends */}\r\n      {!matchStarted && matchResults && <MatchResultsPanel matchResults={matchResults} />}\r\n      \r\n      {/* Test Results Display */}\r\n      {testResults && testResults.length > 0 && (\r\n        <TestResultsPanel \r\n          testResults={testResults} \r\n          isSubmission={isSubmissionResults} \r\n        />\r\n      )}\r\n\r\n      {/* Scoreboard */}\r\n      <div style={{ marginBottom: 16 }}>\r\n        <h3>Scores</h3>\r\n        <ul>\r\n          {players.map((p) => (\r\n            <li key={p.socketId}>\r\n              {p.username}\r\n              {p.socketId === socket.id ? \" (You)\" : \"\"}: {scores[p.socketId] ?? 0}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <small>\r\n          Run: +1 point (one-time only) for passing visible test cases. Submit: +10 points per hidden test case passed.\r\n        </small>\r\n      </div>\r\n\r\n      {/* 2x2 editors grid */}\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"1fr 1fr\",\r\n          gridTemplateRows: \"1fr 1fr\",\r\n          gap: \"10px\",\r\n          height: \"85vh\",\r\n        }}\r\n      >\r\n        {Array.from({ length: 4 }).map((_, idx) => {\r\n          const player = players[idx];\r\n\r\n          return (\r\n            <div\r\n              key={player?.socketId || idx}\r\n              style={{\r\n                border: \"1px solid #ccc\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                minHeight: 0,\r\n              }}\r\n            >\r\n              <div style={{ background: \"#eee\", padding: \"5px\", flexShrink: 0 }}>\r\n                {player ? (\r\n                  <>\r\n                    {player.username}\r\n                    {player.socketId === socket.id && \" (You)\"}\r\n                    <span style={{ float: \"right\" }}>\r\n                      {scores[player?.socketId] ?? 0} pts\r\n                    </span>\r\n                  </>\r\n                ) : (\r\n                  `Waiting for player ${idx + 1}...`\r\n                )}\r\n              </div>\r\n\r\n              <div style={{ flex: 1, minHeight: 0, overflow: \"hidden\" }}>\r\n                {player ? (\r\n                  <>\r\n                    <CodeEditor\r\n                      code={playerEditors[player.socketId] || \"\"}\r\n                      onChange={(value) => handleCodeChange(player.socketId, value)}\r\n                      readOnly={player.socketId !== socket.id}\r\n                      language={player.socketId === socket.id ? language : language}\r\n                      style={{ width: \"100%\", height: \"100%\" }}\r\n                    />\r\n                    {/* Removed individual Run button since we now have dedicated buttons in the top right */}\r\n                  </>\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      background: \"#f9f9f9\",\r\n                    }}\r\n                  >\r\n                    Waiting for player...\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACtE,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,iBAAiB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhE,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACd,MAAM;IAAEC;EAAO,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,QAAQ,GACZ,EAAAJ,eAAA,GAAAE,QAAQ,CAACG,KAAK,cAAAL,eAAA,uBAAdA,eAAA,CAAgBI,QAAQ,KAAI,SAASE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE;EAEzE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,MAAM,CAACiC,QAAQ,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,CAAC,YAAY,CAAC;EACtD,MAAM,CAACmC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACqC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;;EAElE;EACA,MAAM,CAACuC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACA,MAAM,CAACyC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC2C,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;;EAErE;EACA,MAAM,CAAC6C,YAAY,EAAEC,eAAe,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;;EAGtD;EACA,MAAM,CAAC+C,aAAa,EAAEC,gBAAgB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACdK,MAAM,CAAC6C,IAAI,CAAC,WAAW,EAAE;MAAElC,MAAM;MAAEG;IAAS,CAAC,EAAGgC,IAAI,IAAK;MACvD,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACC,EAAE,EAAE;QACrBC,KAAK,CAAC,uBAAuB,IAAI,CAAAF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,KAAK,KAAI,SAAS,CAAC,CAAC;QAC3DpC,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACL;QACA,IAAIM,OAAO,CAAC+B,MAAM,KAAK,CAAC,EAAE;UACxBN,gBAAgB,CAAC,IAAI,CAAC;QACxB;MACF;IACF,CAAC,CAAC;IAEF5C,MAAM,CAACmD,EAAE,CAAC,aAAa,EAAGC,IAAI,IAAK;MACjChC,UAAU,CAACgC,IAAI,CAAC;;MAEhB;MACA9B,gBAAgB,CAAE+B,IAAI,IAAK;QACzB,MAAMC,OAAO,GAAG;UAAE,GAAGD;QAAK,CAAC;QAC3BD,IAAI,CAACG,OAAO,CAAEC,CAAC,IAAK;UAClB,IAAI,CAACF,OAAO,CAACE,CAAC,CAACC,QAAQ,CAAC,EAAE;YACxB;YACA,IAAID,CAAC,CAACC,QAAQ,KAAKzD,MAAM,CAAC0D,EAAE,EAAE;cAC5BJ,OAAO,CAACE,CAAC,CAACC,QAAQ,CAAC,GAAGE,kBAAkB,CAAC9B,QAAQ,CAAC;YACpD,CAAC,MAAM;cACLyB,OAAO,CAACE,CAAC,CAACC,QAAQ,CAAC,GAAG,wBAAwB;YAChD;UACF;QACF,CAAC,CAAC;QACF,OAAOH,OAAO;MAChB,CAAC,CAAC;;MAEF;MACA9B,SAAS,CAAE6B,IAAI,IAAK;QAClB,MAAMC,OAAO,GAAG;UAAE,GAAGD;QAAK,CAAC;QAC3BD,IAAI,CAACG,OAAO,CAAEC,CAAC,IAAK;UAClB,IAAIF,OAAO,CAACE,CAAC,CAACC,QAAQ,CAAC,IAAI,IAAI,EAAEH,OAAO,CAACE,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC;QAC1D,CAAC,CAAC;QACF,OAAOH,OAAO;MAChB,CAAC,CAAC;;MAEF;MACA,IAAIF,IAAI,CAACF,MAAM,GAAG,CAAC,IAAIE,IAAI,CAAC,CAAC,CAAC,CAACK,QAAQ,KAAKzD,MAAM,CAAC0D,EAAE,EAAE;QACrDd,gBAAgB,CAAC,IAAI,CAAC;MACxB,CAAC,MAAM;QACLA,gBAAgB,CAAC,KAAK,CAAC;MACzB;IACF,CAAC,CAAC;IAEF5C,MAAM,CAACmD,EAAE,CAAC,WAAW,EAAGS,KAAK,IAAKtC,gBAAgB,CAACsC,KAAK,CAAC,CAAC;IAC1D5D,MAAM,CAACmD,EAAE,CAAC,cAAc,EAAGU,aAAa,IAAKrC,SAAS,CAACqC,aAAa,CAAC,CAAC;IAEtE7D,MAAM,CAACmD,EAAE,CAAC,eAAe,EAAE,CAAC;MAAE5B,MAAM,EAAEuC,aAAa;MAAEC;IAAU,CAAC,KAAK;MACnErC,eAAe,CAAC,IAAI,CAAC;MACrB,IAAIoC,aAAa,EAAEtC,SAAS,CAACsC,aAAa,CAAC;MAC3C,IAAIC,SAAS,EAAE3B,mBAAmB,CAAC2B,SAAS,CAAC;IAC/C,CAAC,CAAC;;IAEF;IACA/D,MAAM,CAACmD,EAAE,CAAC,eAAe,EAAGY,SAAS,IAAK;MACxC3B,mBAAmB,CAAC2B,SAAS,CAAC;IAChC,CAAC,CAAC;IACF/D,MAAM,CAACmD,EAAE,CAAC,eAAe,EAAE,CAAC;MAAE5B,MAAM;MAAEyC,OAAO;MAAEC,aAAa;MAAEC,gBAAgB;MAAEC;IAAa,CAAC,KAAK;MACjGzC,eAAe,CAAC,KAAK,CAAC;MACtB,IAAIH,MAAM,EAAEC,SAAS,CAACD,MAAM,CAAC;;MAE7B;MACA,IAAI4C,YAAY,EAAE;QAChBnB,KAAK,CAACmB,YAAY,CAAC;MACrB;;MAEA;MACAzB,eAAe,CAAC;QACdsB,OAAO,EAAEC,aAAa,IAAI,EAAE;QAC5BF,SAAS,EAAEG,gBAAgB;QAC3B3C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACAvB,MAAM,CAACmD,EAAE,CAAC,aAAa,EAAE,CAAC;MAAEF;IAAM,CAAC,KAAK;MACtCD,KAAK,CAACC,KAAK,CAAC;IACd,CAAC,CAAC;;IAEF;;IAEA;IACA;IACA,MAAMmB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjClC,qBAAqB,CAAC,IAAI,CAAC;MAC3B,IAAI;QACF;QACA,MAAMmC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAClE,IAAID,QAAQ,CAACtB,EAAE,EAAE;UACf,MAAMwB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClC;UACA,MAAMC,oBAAoB,GAAGF,IAAI,CAACG,GAAG,CAACC,OAAO,IAAIA,OAAO,CAAC9C,QAAQ,CAAC;;UAElE;UACA,MAAM+C,iBAAiB,GAAG,CACxB;YAAElB,EAAE,EAAE,YAAY;YAAEmB,IAAI,EAAE;UAAa,CAAC,EACxC;YAAEnB,EAAE,EAAE,QAAQ;YAAEmB,IAAI,EAAE;UAAS,CAAC,EAChC;YAAEnB,EAAE,EAAE,MAAM;YAAEmB,IAAI,EAAE;UAAO,CAAC,EAC5B;YAAEnB,EAAE,EAAE,GAAG;YAAEmB,IAAI,EAAE;UAAI,CAAC,EACtB;YAAEnB,EAAE,EAAE,KAAK;YAAEmB,IAAI,EAAE;UAAM,CAAC,EAC1B;YAAEnB,EAAE,EAAE,QAAQ;YAAEmB,IAAI,EAAE;UAAK,CAAC,EAC5B;YAAEnB,EAAE,EAAE,IAAI;YAAEmB,IAAI,EAAE;UAAK,CAAC,EACxB;YAAEnB,EAAE,EAAE,MAAM;YAAEmB,IAAI,EAAE;UAAO,CAAC,EAC5B;YAAEnB,EAAE,EAAE,MAAM;YAAEmB,IAAI,EAAE;UAAO,CAAC,EAC5B;YAAEnB,EAAE,EAAE,KAAK;YAAEmB,IAAI,EAAE;UAAM,CAAC,CAC3B,CAACC,MAAM,CAACC,IAAI,IAAIN,oBAAoB,CAACO,QAAQ,CAACD,IAAI,CAACrB,EAAE,CAAC,CAAC;UAExD1B,qBAAqB,CAAC4C,iBAAiB,CAAC;QAC1C,CAAC,MAAM;UACL;UACA5C,qBAAqB,CAAC,CACpB;YAAE0B,EAAE,EAAE,YAAY;YAAEmB,IAAI,EAAE;UAAa,CAAC,EACxC;YAAEnB,EAAE,EAAE,QAAQ;YAAEmB,IAAI,EAAE;UAAS,CAAC,EAChC;YAAEnB,EAAE,EAAE,MAAM;YAAEmB,IAAI,EAAE;UAAO,CAAC,CAC7B,CAAC;QACJ;MACF,CAAC,CAAC,OAAO5B,KAAK,EAAE;QACdgC,OAAO,CAAChC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD;QACAjB,qBAAqB,CAAC,CACpB;UAAE0B,EAAE,EAAE,YAAY;UAAEmB,IAAI,EAAE;QAAa,CAAC,EACxC;UAAEnB,EAAE,EAAE,QAAQ;UAAEmB,IAAI,EAAE;QAAS,CAAC,EAChC;UAAEnB,EAAE,EAAE,MAAM;UAAEmB,IAAI,EAAE;QAAO,CAAC,CAC7B,CAAC;MACJ,CAAC,SAAS;QACR3C,qBAAqB,CAAC,KAAK,CAAC;MAC9B;IACF,CAAC;IAEDkC,cAAc,CAAC,CAAC;IAEhB,OAAO,MAAM;MACXpE,MAAM,CAAC6C,IAAI,CAAC,YAAY,EAAE;QAAElC;MAAO,CAAC,CAAC;MACrCX,MAAM,CAACkF,GAAG,CAAC,aAAa,CAAC;MACzBlF,MAAM,CAACkF,GAAG,CAAC,WAAW,CAAC;MACvBlF,MAAM,CAACkF,GAAG,CAAC,cAAc,CAAC;MAC1BlF,MAAM,CAACkF,GAAG,CAAC,eAAe,CAAC;MAC3BlF,MAAM,CAACkF,GAAG,CAAC,eAAe,CAAC;MAC3BlF,MAAM,CAACkF,GAAG,CAAC,eAAe,CAAC;MAC3BlF,MAAM,CAACkF,GAAG,CAAC,aAAa,CAAC;;MAEzB;MACAxC,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAAC/B,MAAM,EAAEG,QAAQ,EAAED,QAAQ,CAAC,CAAC;EAEhC,MAAMsE,gBAAgB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;IAC5C/D,gBAAgB,CAAE+B,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAAC+B,QAAQ,GAAGC;IAAM,CAAC,CAAC,CAAC;IAC5DrF,MAAM,CAAC6C,IAAI,CAAC,aAAa,EAAE;MAAElC,MAAM;MAAE2E,IAAI,EAAED;IAAM,CAAC,CAAC;EACrD,CAAC;;EAED;EACA,MAAM1B,kBAAkB,GAAIoB,IAAI,IAAK;IACnC,QAAQA,IAAI;MACV,KAAK,YAAY;QACf,OAAO,mDAAmD;MAC5D,KAAK,QAAQ;QACX,OAAO,uCAAuC;MAChD,KAAK,MAAM;QACT,OAAO,yIAAyI;MAClJ,KAAK,GAAG;QACN,OAAO,iGAAiG;MAC1G,KAAK,KAAK;QACR,OAAO,oHAAoH;MAC7H,KAAK,QAAQ;QACX,OAAO,+HAA+H;MACxI,KAAK,IAAI;QACP,OAAO,gGAAgG;MACzG,KAAK,MAAM;QACT,OAAO,mCAAmC;MAC5C,KAAK,MAAM;QACT,OAAO,8DAA8D;MACvE,KAAK,KAAK;QACR,OAAO,+CAA+C;MACxD;QACE,OAAO,yBAAyB;IACpC;EACF,CAAC;EAED,MAAMQ,UAAU,GAAGA,CAAA,KAAMvF,MAAM,CAAC6C,IAAI,CAAC,aAAa,EAAE;IAAElC;EAAO,CAAC,CAAC;EAC/D,MAAM6E,SAAS,GAAGA,CAAA,KAAMxF,MAAM,CAAC6C,IAAI,CAAC,YAAY,EAAE;IAAElC;EAAO,CAAC,CAAC;EAE7D,MAAM8E,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMH,IAAI,GAAGjE,aAAa,CAACrB,MAAM,CAAC0D,EAAE,CAAC,IAAI,EAAE;IAC3C9B,eAAe,CAAC,IAAI,CAAC;IACrBU,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACtB,IAAI;MACF,MAAMQ,IAAI,GAAG,MAAMwB,KAAK,CAAC,+BAA+B,EAAE;QACxDoB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjE,QAAQ;UAAE;UACVyD,IAAI;UACJS,KAAK,EAAE,EAAE;UACTpF,MAAM;UACN8C,QAAQ,EAAEzD,MAAM,CAAC0D,EAAE,CAAE;QACvB,CAAC;MACH,CAAC,CAAC;MACF,MAAMa,IAAI,GAAG,MAAMzB,IAAI,CAAC0B,IAAI,CAAC,CAAC;MAC9B,IAAI,CAAC1B,IAAI,CAACC,EAAE,EAAE;QACZC,KAAK,CAAC,CAAAuB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEtB,KAAK,KAAI,YAAY,CAAC;MACpC,CAAC,MAAM;QACL;QACAgC,OAAO,CAACe,GAAG,CAAC,aAAa,EAAEzB,IAAI,CAAC;QAChCjC,cAAc,CAACiC,IAAI,CAAClC,WAAW,IAAI,EAAE,CAAC;QACtCG,sBAAsB,CAAC,KAAK,CAAC;QAE7B,IAAI+B,IAAI,CAAC0B,WAAW,KAAK,CAAC,EAAE;UAC1B;UACAhB,OAAO,CAACe,GAAG,CAAC,kBAAkB,CAAC;QACjC,CAAC,MAAM,IAAIzB,IAAI,CAAC0B,WAAW,KAAK1B,IAAI,CAAC2B,UAAU,EAAE;UAC/C;UACAjB,OAAO,CAACe,GAAG,CAAC,sBAAsBzB,IAAI,CAAC0B,WAAW,IAAI1B,IAAI,CAAC2B,UAAU,GAAG,CAAC;QAC3E,CAAC,MAAM;UACL;UACAjB,OAAO,CAACe,GAAG,CAAC,GAAGzB,IAAI,CAAC0B,WAAW,IAAI1B,IAAI,CAAC2B,UAAU,gBAAgB,CAAC;QACrE;;QAEA;QACA,IAAI3B,IAAI,CAAC4B,aAAa,EAAE;UACtBlB,OAAO,CAACe,GAAG,CAAC,IAAIzB,IAAI,CAAC4B,aAAa,oBAAoB,CAAC;QACzD;MACF;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVpD,KAAK,CAACoD,CAAC,CAACC,OAAO,IAAI,eAAe,CAAC;IACrC,CAAC,SAAS;MACRzE,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAM0E,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMhB,IAAI,GAAGjE,aAAa,CAACrB,MAAM,CAAC0D,EAAE,CAAC,IAAI,EAAE;IAC3C9B,eAAe,CAAC,IAAI,CAAC;IACrBU,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACtB,IAAI;MACF,MAAMQ,IAAI,GAAG,MAAMwB,KAAK,CAAC,+BAA+B,EAAE;QACxDoB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjE,QAAQ;UAAE;UACVyD,IAAI;UACJS,KAAK,EAAE,EAAE;UACTpF,MAAM;UACN8C,QAAQ,EAAEzD,MAAM,CAAC0D,EAAE;UACnB6C,YAAY,EAAE,IAAI,CAAE;QACtB,CAAC;MACH,CAAC,CAAC;MACF,MAAMhC,IAAI,GAAG,MAAMzB,IAAI,CAAC0B,IAAI,CAAC,CAAC;MAC9B,IAAI,CAAC1B,IAAI,CAACC,EAAE,EAAE;QACZC,KAAK,CAAC,CAAAuB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEtB,KAAK,KAAI,mBAAmB,CAAC;MAC3C,CAAC,MAAM;QACL;QACAgC,OAAO,CAACe,GAAG,CAAC,oBAAoB,EAAEzB,IAAI,CAAC;QACvCjC,cAAc,CAACiC,IAAI,CAAClC,WAAW,IAAI,EAAE,CAAC;QACtCG,sBAAsB,CAAC,IAAI,CAAC;QAE5B,IAAI+B,IAAI,CAAC0B,WAAW,KAAK,CAAC,EAAE;UAC1B;UACAjD,KAAK,CAAC,2DAA2D,CAAC;QACpE,CAAC,MAAM,IAAIuB,IAAI,CAAC0B,WAAW,KAAK1B,IAAI,CAAC2B,UAAU,EAAE;UAC/C;UACAlD,KAAK,CAAC,uCAAuCuB,IAAI,CAAC2B,UAAU,cAAc,CAAC;QAC7E,CAAC,MAAM;UACL;UACAlD,KAAK,CAAC,wBAAwBuB,IAAI,CAAC0B,WAAW,WAAW1B,IAAI,CAAC2B,UAAU,cAAc,CAAC;QACzF;;QAEA;QACA,IAAI3B,IAAI,CAAC4B,aAAa,EAAE;UACtBnD,KAAK,CAAC,IAAIuB,IAAI,CAAC4B,aAAa,gDAAgD,CAAC;QAC/E;MACF;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVpD,KAAK,CAACoD,CAAC,CAACC,OAAO,IAAI,eAAe,CAAC;IACrC,CAAC,SAAS;MACRzE,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKmG,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE,OAAO;MAAEC,SAAS,EAAE,YAAY;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,gBAC9FxG,OAAA;MAAKmG,KAAK,EAAE;QAAEM,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE,eAAe;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAJ,QAAA,gBAC3GxG,OAAA;QAAAwG,QAAA,gBACExG,OAAA;UAAAwG,QAAA,GAAI,QAAM,EAAClG,MAAM;QAAA;UAAAuG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBhH,OAAA;UAAAwG,QAAA,GAAG,gBAAc,EAAC/F,QAAQ;QAAA;UAAAoG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACNhH,OAAA;QAAKmG,KAAK,EAAE;UAAEM,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAF,QAAA,gBACpDxG,OAAA;UAAOiH,OAAO,EAAC,iBAAiB;UAACd,KAAK,EAAE;YAAEe,WAAW,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAAX,QAAA,EAAC;QAErF;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACPpF,kBAAkB,gBACjB5B,OAAA;UAAKmG,KAAK,EAAE;YACVC,OAAO,EAAE,KAAK;YACdgB,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,gBAAgB;YACxBC,eAAe,EAAE,SAAS;YAC1BC,QAAQ,EAAE,MAAM;YAChBC,QAAQ,EAAE,OAAO;YACjBC,SAAS,EAAE;UACb,CAAE;UAAAjB,QAAA,EAAC;QAEH;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAENhH,OAAA;UACEqD,EAAE,EAAC,iBAAiB;UACpB2B,KAAK,EAAExD,QAAS;UAChBkG,QAAQ,EAAG3B,CAAC,IAAK;YACf,MAAM4B,WAAW,GAAG5B,CAAC,CAAC6B,MAAM,CAAC5C,KAAK;YAClCvD,WAAW,CAACkG,WAAW,CAAC;YACxB;YACA,IAAIhI,MAAM,CAAC0D,EAAE,IAAIrC,aAAa,CAACrB,MAAM,CAAC0D,EAAE,CAAC,EAAE;cACzC,MAAMwE,WAAW,GAAG7G,aAAa,CAACrB,MAAM,CAAC0D,EAAE,CAAC;cAC5C;cACA,MAAMyE,gBAAgB,GAAGD,WAAW,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,IAChDrG,kBAAkB,CAACsG,IAAI,CAACtD,IAAI,IAC1BmD,WAAW,KAAKvE,kBAAkB,CAACoB,IAAI,CAACrB,EAAE,CAAC,CAAC;cAEhD,IAAIyE,gBAAgB,EAAE;gBACpB,MAAMG,WAAW,GAAG3E,kBAAkB,CAACqE,WAAW,CAAC;gBACnD7C,gBAAgB,CAACnF,MAAM,CAAC0D,EAAE,EAAE4E,WAAW,CAAC;cAC1C;YACF;UACF,CAAE;UACF9B,KAAK,EAAE;YACLC,OAAO,EAAE,KAAK;YACdgB,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,gBAAgB;YACxBC,eAAe,EAAE,SAAS;YAC1BY,MAAM,EAAE,SAAS;YACjBX,QAAQ,EAAE,MAAM;YAChBC,QAAQ,EAAE;UACZ,CAAE;UACFW,QAAQ,EAAEzG,kBAAkB,CAACmB,MAAM,KAAK,CAAE;UAAA2D,QAAA,EAEzC9E,kBAAkB,CAACmB,MAAM,KAAK,CAAC,gBAC9B7C,OAAA;YAAAwG,QAAA,EAAQ;UAAsB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,GAEvCtF,kBAAkB,CAAC2C,GAAG,CAAEK,IAAI,iBAC1B1E,OAAA;YAAsBgF,KAAK,EAAEN,IAAI,CAACrB,EAAG;YAAAmD,QAAA,EAClC9B,IAAI,CAACF;UAAI,GADCE,IAAI,CAACrB,EAAE;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CACT;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNhH,OAAA;MAAKmG,KAAK,EAAE;QACVI,QAAQ,EAAE,UAAU;QACpB6B,GAAG,EAAE,MAAM;QACXC,KAAK,EAAE,MAAM;QACb5B,OAAO,EAAE,MAAM;QACf6B,GAAG,EAAE;MACP,CAAE;MAAA9B,QAAA,gBACAxG,OAAA;QACEuI,OAAO,EAAEnD,UAAW;QACpB+C,QAAQ,EAAE,CAAC/G,YAAY,IAAIE,YAAa;QACxC6E,KAAK,EAAE;UACLC,OAAO,EAAE,UAAU;UACnBkB,eAAe,EAAE,SAAS;UAC1BkB,KAAK,EAAE,OAAO;UACdnB,MAAM,EAAE,MAAM;UACdD,YAAY,EAAE,KAAK;UACnBc,MAAM,EAAG9G,YAAY,IAAI,CAACE,YAAY,GAAI,SAAS,GAAG,aAAa;UACnE6F,UAAU,EAAE,MAAM;UAClBsB,OAAO,EAAEnH,YAAY,GAAG,GAAG,GAAG,CAAC;UAC/BkG,QAAQ,EAAE;QACZ,CAAE;QAAAhB,QAAA,EAEDlF,YAAY,GAAG,YAAY,GAAG;MAAU;QAAAuF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACThH,OAAA;QACEuI,OAAO,EAAEtC,UAAW;QACpBkC,QAAQ,EAAE,CAAC/G,YAAY,IAAIE,YAAa;QACxC6E,KAAK,EAAE;UACLC,OAAO,EAAE,UAAU;UACnBkB,eAAe,EAAE,SAAS;UAC1BkB,KAAK,EAAE,OAAO;UACdnB,MAAM,EAAE,MAAM;UACdD,YAAY,EAAE,KAAK;UACnBc,MAAM,EAAG9G,YAAY,IAAI,CAACE,YAAY,GAAI,SAAS,GAAG,aAAa;UACnE6F,UAAU,EAAE,MAAM;UAClBsB,OAAO,EAAEnH,YAAY,GAAG,GAAG,GAAG,CAAC;UAC/BkG,QAAQ,EAAE;QACZ,CAAE;QAAAhB,QAAA,EAEDlF,YAAY,GAAG,eAAe,GAAG;MAAQ;QAAAuF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNhH,OAAA;MAAKmG,KAAK,EAAE;QAAES,YAAY,EAAE;MAAG,CAAE;MAAAJ,QAAA,EAC9BlE,aAAa,GACZ,CAAClB,YAAY,gBACXpB,OAAA;QACEuI,OAAO,EAAErD,UAAW;QACpBiD,QAAQ,EAAErH,OAAO,CAAC+B,MAAM,GAAG,CAAE;QAC7B6F,KAAK,EAAE5H,OAAO,CAAC+B,MAAM,GAAG,CAAC,GAAG,kCAAkC,GAAG,EAAG;QACpEsD,KAAK,EAAE;UACLsC,OAAO,EAAE3H,OAAO,CAAC+B,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;UACrCqF,MAAM,EAAEpH,OAAO,CAAC+B,MAAM,GAAG,CAAC,GAAG,aAAa,GAAG;QAC/C,CAAE;QAAA2D,QAAA,GACH,cACa,EAAC1F,OAAO,CAAC+B,MAAM,GAAG,CAAC,GAAG,qBAAqB,GAAG,EAAE;MAAA;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,gBAEThH,OAAA;QAAQuI,OAAO,EAAEpD,SAAU;QAAAqB,QAAA,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAC/C,GAED5F,YAAY,gBACVpB,OAAA;QAAAwG,QAAA,EAAK;MAAoB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAE/BhH,OAAA;QAAAwG,QAAA,EAAK;MAA8C;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAE3D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGLlF,gBAAgB,iBACf9B,OAAA;MAAKmG,KAAK,EAAE;QACVS,YAAY,EAAE,EAAE;QAChBR,OAAO,EAAE,MAAM;QACfkB,eAAe,EAAE,SAAS;QAC1BF,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE;MACV,CAAE;MAAAb,QAAA,gBACAxG,OAAA;QAAImG,KAAK,EAAE;UAAEwC,SAAS,EAAE;QAAE,CAAE;QAAAnC,QAAA,EAAE1E,gBAAgB,CAAC4G;MAAK;QAAA7B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1DhH,OAAA;QAAKmG,KAAK,EAAE;UAAEyC,UAAU,EAAE;QAAW,CAAE;QAAApC,QAAA,gBACrCxG,OAAA;UAAAwG,QAAA,gBAAGxG,OAAA;YAAAwG,QAAA,EAAQ;UAAY;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAClF,gBAAgB,CAAC+G,WAAW;QAAA;UAAAhC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAClElF,gBAAgB,CAACgH,WAAW,iBAC3B9I,OAAA;UAAAwG,QAAA,gBAAGxG,OAAA;YAAAwG,QAAA,EAAQ;UAAY;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAClF,gBAAgB,CAACgH,WAAW;QAAA;UAAAjC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CACnE,eACDhH,OAAA;UAAKmG,KAAK,EAAE;YAAEM,OAAO,EAAE,MAAM;YAAE6B,GAAG,EAAE;UAAO,CAAE;UAAA9B,QAAA,gBAC3CxG,OAAA;YAAKmG,KAAK,EAAE;cAAE4C,IAAI,EAAE;YAAE,CAAE;YAAAvC,QAAA,gBACtBxG,OAAA;cAAAwG,QAAA,eAAGxG,OAAA;gBAAAwG,QAAA,EAAQ;cAAc;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACtChH,OAAA;cAAKmG,KAAK,EAAE;gBACVmB,eAAe,EAAE,SAAS;gBAC1BlB,OAAO,EAAE,MAAM;gBACfgB,YAAY,EAAE,KAAK;gBACnB4B,SAAS,EAAE;cACb,CAAE;cAAAxC,QAAA,EAAE1E,gBAAgB,CAACmH;YAAY;cAAApC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACNhH,OAAA;YAAKmG,KAAK,EAAE;cAAE4C,IAAI,EAAE;YAAE,CAAE;YAAAvC,QAAA,gBACtBxG,OAAA;cAAAwG,QAAA,eAAGxG,OAAA;gBAAAwG,QAAA,EAAQ;cAAe;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACvChH,OAAA;cAAKmG,KAAK,EAAE;gBACVmB,eAAe,EAAE,SAAS;gBAC1BlB,OAAO,EAAE,MAAM;gBACfgB,YAAY,EAAE,KAAK;gBACnB4B,SAAS,EAAE;cACb,CAAE;cAAAxC,QAAA,EAAE1E,gBAAgB,CAACoH;YAAa;cAAArC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNhH,OAAA;UAAAwG,QAAA,gBAAGxG,OAAA;YAAAwG,QAAA,EAAQ;UAAW;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAClF,gBAAgB,CAACqH,UAAU;QAAA;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA,CAAC5F,YAAY,IAAIgB,YAAY,iBAAIpC,OAAA,CAACF,iBAAiB;MAACsC,YAAY,EAAEA;IAAa;MAAAyE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGlFhF,WAAW,IAAIA,WAAW,CAACa,MAAM,GAAG,CAAC,iBACpC7C,OAAA,CAACH,gBAAgB;MACfmC,WAAW,EAAEA,WAAY;MACzBkE,YAAY,EAAEhE;IAAoB;MAAA2E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACF,eAGDhH,OAAA;MAAKmG,KAAK,EAAE;QAAES,YAAY,EAAE;MAAG,CAAE;MAAAJ,QAAA,gBAC/BxG,OAAA;QAAAwG,QAAA,EAAI;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfhH,OAAA;QAAAwG,QAAA,EACG1F,OAAO,CAACuD,GAAG,CAAElB,CAAC;UAAA,IAAAiG,kBAAA;UAAA,oBACbpJ,OAAA;YAAAwG,QAAA,GACGrD,CAAC,CAAC1C,QAAQ,EACV0C,CAAC,CAACC,QAAQ,KAAKzD,MAAM,CAAC0D,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAC,IAAE,GAAA+F,kBAAA,GAAClI,MAAM,CAACiC,CAAC,CAACC,QAAQ,CAAC,cAAAgG,kBAAA,cAAAA,kBAAA,GAAI,CAAC;UAAA,GAF7DjG,CAAC,CAACC,QAAQ;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGf,CAAC;QAAA,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLhH,OAAA;QAAAwG,QAAA,EAAO;MAEP;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGNhH,OAAA;MACEmG,KAAK,EAAE;QACLM,OAAO,EAAE,MAAM;QACf4C,mBAAmB,EAAE,SAAS;QAC9BC,gBAAgB,EAAE,SAAS;QAC3BhB,GAAG,EAAE,MAAM;QACXjC,MAAM,EAAE;MACV,CAAE;MAAAG,QAAA,EAED+C,KAAK,CAACC,IAAI,CAAC;QAAE3G,MAAM,EAAE;MAAE,CAAC,CAAC,CAACwB,GAAG,CAAC,CAACoF,CAAC,EAAEC,GAAG,KAAK;QAAA,IAAAC,qBAAA;QACzC,MAAMC,MAAM,GAAG9I,OAAO,CAAC4I,GAAG,CAAC;QAE3B,oBACE1J,OAAA;UAEEmG,KAAK,EAAE;YACLkB,MAAM,EAAE,gBAAgB;YACxBZ,OAAO,EAAE,MAAM;YACfoD,aAAa,EAAE,QAAQ;YACvBC,SAAS,EAAE;UACb,CAAE;UAAAtD,QAAA,gBAEFxG,OAAA;YAAKmG,KAAK,EAAE;cAAE4D,UAAU,EAAE,MAAM;cAAE3D,OAAO,EAAE,KAAK;cAAE4D,UAAU,EAAE;YAAE,CAAE;YAAAxD,QAAA,EAC/DoD,MAAM,gBACL5J,OAAA,CAAAE,SAAA;cAAAsG,QAAA,GACGoD,MAAM,CAACnJ,QAAQ,EACfmJ,MAAM,CAACxG,QAAQ,KAAKzD,MAAM,CAAC0D,EAAE,IAAI,QAAQ,eAC1CrD,OAAA;gBAAMmG,KAAK,EAAE;kBAAE8D,KAAK,EAAE;gBAAQ,CAAE;gBAAAzD,QAAA,IAAAmD,qBAAA,GAC7BzI,MAAM,CAAC0I,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAExG,QAAQ,CAAC,cAAAuG,qBAAA,cAAAA,qBAAA,GAAI,CAAC,EAAC,MACjC;cAAA;gBAAA9C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA,eACP,CAAC,GAEH,sBAAsB0C,GAAG,GAAG,CAAC;UAC9B;YAAA7C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAENhH,OAAA;YAAKmG,KAAK,EAAE;cAAE4C,IAAI,EAAE,CAAC;cAAEe,SAAS,EAAE,CAAC;cAAEI,QAAQ,EAAE;YAAS,CAAE;YAAA1D,QAAA,EACvDoD,MAAM,gBACL5J,OAAA,CAAAE,SAAA;cAAAsG,QAAA,eACExG,OAAA,CAACJ,UAAU;gBACTqF,IAAI,EAAEjE,aAAa,CAAC4I,MAAM,CAACxG,QAAQ,CAAC,IAAI,EAAG;gBAC3CsE,QAAQ,EAAG1C,KAAK,IAAKF,gBAAgB,CAAC8E,MAAM,CAACxG,QAAQ,EAAE4B,KAAK,CAAE;gBAC9DmF,QAAQ,EAAEP,MAAM,CAACxG,QAAQ,KAAKzD,MAAM,CAAC0D,EAAG;gBACxC7B,QAAQ,EAAEoI,MAAM,CAACxG,QAAQ,KAAKzD,MAAM,CAAC0D,EAAE,GAAG7B,QAAQ,GAAGA,QAAS;gBAC9D2E,KAAK,EAAE;kBAAEiE,KAAK,EAAE,MAAM;kBAAE/D,MAAM,EAAE;gBAAO;cAAE;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C;YAAC,gBAEF,CAAC,gBAEHhH,OAAA;cACEmG,KAAK,EAAE;gBACLE,MAAM,EAAE,MAAM;gBACdI,OAAO,EAAE,MAAM;gBACfC,UAAU,EAAE,QAAQ;gBACpBC,cAAc,EAAE,QAAQ;gBACxBoD,UAAU,EAAE;cACd,CAAE;cAAAvD,QAAA,EACH;YAED;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,GA/CD,CAAA4C,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAExG,QAAQ,KAAIsG,GAAG;UAAA7C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgDzB,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5G,EAAA,CAhlBQD,IAAI;EAAA,QACQT,SAAS,EACXF,WAAW,EACXC,WAAW;AAAA;AAAA4K,EAAA,GAHrBlK,IAAI;AAklBb,eAAeA,IAAI;AAAC,IAAAkK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}