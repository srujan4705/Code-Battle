{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pandi\\\\Code-Battle\\\\frontend\\\\src\\\\components\\\\RunPanel.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LANGUAGES = [{\n  label: \"JavaScript (node)\",\n  value: \"javascript\"\n}, {\n  label: \"Python 3\",\n  value: \"python\"\n}, {\n  label: \"C++ (G++)\",\n  value: \"cpp\"\n}, {\n  label: \"Java\",\n  value: \"java\"\n}, {\n  label: \"C (GCC)\",\n  value: \"c\"\n}];\nfunction RunPanel({\n  language,\n  setLanguage,\n  stdin,\n  setStdin,\n  onRun,\n  running\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 1fr\",\n      gap: \"12px\",\n      margin: \"12px 0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"block\",\n          marginBottom: 6\n        },\n        children: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: language,\n        onChange: e => setLanguage(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: 8\n        },\n        children: LANGUAGES.map(l => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: l.value,\n          children: l.label\n        }, l.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"block\",\n          marginBottom: 6\n        },\n        children: \"STDIN (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: stdin,\n        onChange: e => setStdin(e.target.value),\n        placeholder: \"Input for your program\",\n        style: {\n          width: \"100%\",\n          padding: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRun,\n        disabled: running,\n        style: {\n          padding: \"10px 16px\",\n          cursor: running ? \"not-allowed\" : \"pointer\",\n          width: \"100%\"\n        },\n        children: running ? \"Running...\" : \"Run ▶\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = RunPanel;\nexport default RunPanel;\nvar _c;\n$RefreshReg$(_c, \"RunPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LANGUAGES","label","value","RunPanel","language","setLanguage","stdin","setStdin","onRun","running","style","display","gridTemplateColumns","gap","margin","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","width","padding","map","l","placeholder","onClick","disabled","cursor","_c","$RefreshReg$"],"sources":["C:/Users/pandi/Code-Battle/frontend/src/components/RunPanel.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst LANGUAGES = [\r\n  { label: \"JavaScript (node)\", value: \"javascript\" },\r\n  { label: \"Python 3\", value: \"python\" },\r\n  { label: \"C++ (G++)\", value: \"cpp\" },\r\n  { label: \"Java\", value: \"java\" },\r\n  { label: \"C (GCC)\", value: \"c\" },\r\n  \r\n];\r\n\r\nfunction RunPanel({ language, setLanguage, stdin, setStdin, onRun, running }) {\r\n  return (\r\n    <div style={{\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr 1fr\",\r\n      gap: \"12px\",\r\n      margin: \"12px 0\"\r\n    }}>\r\n      <div>\r\n        <label style={{ display: \"block\", marginBottom: 6 }}>Language</label>\r\n        <select\r\n          value={language}\r\n          onChange={(e) => setLanguage(e.target.value)}\r\n          style={{ width: \"100%\", padding: 8 }}\r\n        >\r\n          {LANGUAGES.map(l => (\r\n            <option key={l.value} value={l.value}>{l.label}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label style={{ display: \"block\", marginBottom: 6 }}>STDIN (optional)</label>\r\n        <input\r\n          value={stdin}\r\n          onChange={(e) => setStdin(e.target.value)}\r\n          placeholder=\"Input for your program\"\r\n          style={{ width: \"100%\", padding: 8 }}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button\r\n          onClick={onRun}\r\n          disabled={running}\r\n          style={{\r\n            padding: \"10px 16px\",\r\n            cursor: running ? \"not-allowed\" : \"pointer\",\r\n            width: \"100%\"\r\n          }}\r\n        >\r\n          {running ? \"Running...\" : \"Run ▶\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RunPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}