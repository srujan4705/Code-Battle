{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pandi\\\\Code-Battle\\\\frontend\\\\src\\\\pages\\\\Room.js\",\n  _s = $RefreshSig$();\n// src/pages/Room.js\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport socket from \"../socket\";\nimport CodeEditor from \"../components/CodeEditor\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Room() {\n  _s();\n  var _location$state;\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const username = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || `guest-${Math.floor(Math.random() * 1000)}`;\n  const [players, setPlayers] = useState([]);\n  const [playerEditors, setPlayerEditors] = useState({}); // { playerId: code }\n\n  useEffect(() => {\n    // Join room\n    socket.emit(\"join-room\", {\n      roomId,\n      username\n    }, resp => {\n      if (!resp || !resp.ok) {\n        alert(\"Failed to join room: \" + ((resp === null || resp === void 0 ? void 0 : resp.error) || \"unknown\"));\n        navigate(\"/\");\n      }\n    });\n    socket.on(\"player-list\", list => {\n      setPlayers(list);\n      // Ensure each player has an editor slot\n      setPlayerEditors(prev => {\n        const updated = {\n          ...prev\n        };\n        list.forEach(p => {\n          if (!updated[p.socketId]) {\n            updated[p.socketId] = \"// waiting for code...\";\n          }\n        });\n        return updated;\n      });\n    });\n\n    // Listen for code changes from others\n    socket.on(\"all-codes\", codes => {\n      setPlayerEditors(codes);\n    });\n    return () => {\n      socket.emit(\"leave-room\", {\n        roomId\n      });\n      socket.off(\"player-list\");\n      socket.off(\"all-codes\");\n    };\n  }, [roomId, username, navigate]);\n  const handleCodeChange = (playerId, value) => {\n    setPlayerEditors(prev => ({\n      ...prev,\n      [playerId]: value\n    }));\n    socket.emit(\"code-change\", {\n      roomId,\n      code: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      height: \"100vh\",\n      boxSizing: \"border-box\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Logged in as: \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n        gridTemplateRows: \"1fr 1fr\",\n        gap: \"10px\",\n        height: \"85vh\"\n      },\n      children: Array.from({\n        length: 4\n      }).map((_, idx) => {\n        const player = players[idx];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            minHeight: 0 // important for flex children\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"#eee\",\n              padding: \"5px\",\n              flexShrink: 0\n            },\n            children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [player.username, player.socketId === socket.id && \" (You)\"]\n            }, void 0, true) : `Waiting for player ${idx + 1}...`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              minHeight: 0,\n              overflow: \"hidden\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"100%\"\n            },\n            children: player ? /*#__PURE__*/_jsxDEV(CodeEditor, {\n              code: playerEditors[player.socketId] || \"\",\n              onChange: value => handleCodeChange(player.socketId, value),\n              readOnly: player.socketId !== socket.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: \"100%\",\n                background: \"#1e1e1e\",\n                color: \"#ccc\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\"\n              },\n              children: \"Waiting for player...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, (player === null || player === void 0 ? void 0 : player.socketId) || idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"WRfM0ZIptFcj3fcJiIVFtsV5UOk=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","useParams","socket","CodeEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","Room","_s","_location$state","roomId","location","navigate","username","state","Math","floor","random","players","setPlayers","playerEditors","setPlayerEditors","emit","resp","ok","alert","error","on","list","prev","updated","forEach","p","socketId","codes","off","handleCodeChange","playerId","value","code","style","padding","height","boxSizing","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gridTemplateRows","gap","Array","from","length","map","_","idx","player","border","flexDirection","minHeight","background","flexShrink","id","flex","overflow","onChange","readOnly","color","alignItems","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/pandi/Code-Battle/frontend/src/pages/Room.js"],"sourcesContent":["// src/pages/Room.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport socket from \"../socket\";\r\nimport CodeEditor from \"../components/CodeEditor\";\r\n\r\nfunction Room() {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const username =\r\n    location.state?.username || `guest-${Math.floor(Math.random() * 1000)}`;\r\n\r\n  const [players, setPlayers] = useState([]);\r\n  const [playerEditors, setPlayerEditors] = useState({}); // { playerId: code }\r\n\r\n  useEffect(() => {\r\n    // Join room\r\n    socket.emit(\"join-room\", { roomId, username }, (resp) => {\r\n      if (!resp || !resp.ok) {\r\n        alert(\"Failed to join room: \" + (resp?.error || \"unknown\"));\r\n        navigate(\"/\");\r\n      }\r\n    });\r\n\r\n    socket.on(\"player-list\", (list) => {\r\n      setPlayers(list);\r\n      // Ensure each player has an editor slot\r\n      setPlayerEditors((prev) => {\r\n        const updated = { ...prev };\r\n        list.forEach((p) => {\r\n          if (!updated[p.socketId]) {\r\n            updated[p.socketId] = \"// waiting for code...\";\r\n          }\r\n        });\r\n        return updated;\r\n      });\r\n    });\r\n\r\n    // Listen for code changes from others\r\n    socket.on(\"all-codes\", (codes) => {\r\n      setPlayerEditors(codes);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"leave-room\", { roomId });\r\n      socket.off(\"player-list\");\r\n      socket.off(\"all-codes\");\r\n    };\r\n  }, [roomId, username, navigate]);\r\n\r\n  const handleCodeChange = (playerId, value) => {\r\n    setPlayerEditors((prev) => ({\r\n      ...prev,\r\n      [playerId]: value,\r\n    }));\r\n    socket.emit(\"code-change\", { roomId, code: value });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", height: \"100vh\", boxSizing: \"border-box\" }}>\r\n      <h2>Room: {roomId}</h2>\r\n      <p>Logged in as: {username}</p>\r\n\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"1fr 1fr\",\r\n          gridTemplateRows: \"1fr 1fr\",\r\n          gap: \"10px\",\r\n          height: \"85vh\",\r\n        }}\r\n      >\r\n        {Array.from({ length: 4 }).map((_, idx) => {\r\n          const player = players[idx];\r\n          return (\r\n            <div\r\n              key={player?.socketId || idx}\r\n              style={{\r\n                border: \"1px solid #ccc\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                minHeight: 0, // important for flex children\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  background: \"#eee\",\r\n                  padding: \"5px\",\r\n                  flexShrink: 0,\r\n                }}\r\n              >\r\n                {player ? (\r\n                  <>\r\n                    {player.username}\r\n                    {player.socketId === socket.id && \" (You)\"}\r\n                  </>\r\n                ) : (\r\n                  `Waiting for player ${idx + 1}...`\r\n                )}\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  flex: 1,\r\n                  minHeight: 0,\r\n                  overflow: \"hidden\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  height: \"100%\",\r\n                }}\r\n              >\r\n                {player ? (\r\n                  <CodeEditor\r\n                    code={playerEditors[player.socketId] || \"\"}\r\n                    onChange={(value) =>\r\n                      handleCodeChange(player.socketId, value)\r\n                    }\r\n                    readOnly={player.socketId !== socket.id}\r\n                  />\r\n                ) : (\r\n                  <div style={{ height: \"100%\", background: \"#1e1e1e\", color: \"#ccc\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                    Waiting for player...\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}